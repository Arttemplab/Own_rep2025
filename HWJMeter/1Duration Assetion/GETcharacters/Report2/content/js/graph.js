/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 32156.0, "series": [{"data": [[0.0, 4.0], [0.1, 45.0], [0.2, 60.0], [0.3, 71.0], [0.4, 98.0], [0.5, 127.0], [0.6, 133.0], [0.7, 137.0], [0.8, 142.0], [0.9, 150.0], [1.0, 153.0], [1.1, 156.0], [1.2, 175.0], [1.3, 182.0], [1.4, 195.0], [1.5, 202.0], [1.6, 205.0], [1.7, 207.0], [1.8, 216.0], [1.9, 220.0], [2.0, 225.0], [2.1, 231.0], [2.2, 232.0], [2.3, 236.0], [2.4, 238.0], [2.5, 241.0], [2.6, 244.0], [2.7, 245.0], [2.8, 246.0], [2.9, 248.0], [3.0, 251.0], [3.1, 253.0], [3.2, 256.0], [3.3, 257.0], [3.4, 258.0], [3.5, 260.0], [3.6, 264.0], [3.7, 272.0], [3.8, 275.0], [3.9, 281.0], [4.0, 284.0], [4.1, 287.0], [4.2, 289.0], [4.3, 294.0], [4.4, 297.0], [4.5, 299.0], [4.6, 303.0], [4.7, 306.0], [4.8, 311.0], [4.9, 313.0], [5.0, 316.0], [5.1, 318.0], [5.2, 324.0], [5.3, 328.0], [5.4, 331.0], [5.5, 334.0], [5.6, 338.0], [5.7, 340.0], [5.8, 342.0], [5.9, 344.0], [6.0, 347.0], [6.1, 352.0], [6.2, 353.0], [6.3, 355.0], [6.4, 358.0], [6.5, 359.0], [6.6, 361.0], [6.7, 365.0], [6.8, 366.0], [6.9, 368.0], [7.0, 370.0], [7.1, 372.0], [7.2, 375.0], [7.3, 379.0], [7.4, 382.0], [7.5, 385.0], [7.6, 386.0], [7.7, 390.0], [7.8, 391.0], [7.9, 393.0], [8.0, 395.0], [8.1, 398.0], [8.2, 404.0], [8.3, 411.0], [8.4, 418.0], [8.5, 427.0], [8.6, 433.0], [8.7, 435.0], [8.8, 437.0], [8.9, 439.0], [9.0, 441.0], [9.1, 447.0], [9.2, 449.0], [9.3, 451.0], [9.4, 454.0], [9.5, 457.0], [9.6, 459.0], [9.7, 461.0], [9.8, 464.0], [9.9, 466.0], [10.0, 467.0], [10.1, 470.0], [10.2, 472.0], [10.3, 474.0], [10.4, 476.0], [10.5, 477.0], [10.6, 479.0], [10.7, 482.0], [10.8, 483.0], [10.9, 485.0], [11.0, 486.0], [11.1, 489.0], [11.2, 490.0], [11.3, 492.0], [11.4, 493.0], [11.5, 495.0], [11.6, 497.0], [11.7, 499.0], [11.8, 500.0], [11.9, 502.0], [12.0, 503.0], [12.1, 504.0], [12.2, 505.0], [12.3, 506.0], [12.4, 509.0], [12.5, 510.0], [12.6, 512.0], [12.7, 513.0], [12.8, 513.0], [12.9, 514.0], [13.0, 516.0], [13.1, 517.0], [13.2, 518.0], [13.3, 520.0], [13.4, 521.0], [13.5, 522.0], [13.6, 523.0], [13.7, 525.0], [13.8, 527.0], [13.9, 528.0], [14.0, 529.0], [14.1, 529.0], [14.2, 530.0], [14.3, 531.0], [14.4, 532.0], [14.5, 533.0], [14.6, 533.0], [14.7, 534.0], [14.8, 536.0], [14.9, 537.0], [15.0, 538.0], [15.1, 539.0], [15.2, 540.0], [15.3, 541.0], [15.4, 543.0], [15.5, 544.0], [15.6, 546.0], [15.7, 547.0], [15.8, 549.0], [15.9, 550.0], [16.0, 550.0], [16.1, 551.0], [16.2, 553.0], [16.3, 555.0], [16.4, 556.0], [16.5, 557.0], [16.6, 558.0], [16.7, 560.0], [16.8, 561.0], [16.9, 561.0], [17.0, 562.0], [17.1, 563.0], [17.2, 564.0], [17.3, 564.0], [17.4, 565.0], [17.5, 566.0], [17.6, 566.0], [17.7, 567.0], [17.8, 567.0], [17.9, 569.0], [18.0, 570.0], [18.1, 572.0], [18.2, 572.0], [18.3, 573.0], [18.4, 573.0], [18.5, 574.0], [18.6, 575.0], [18.7, 576.0], [18.8, 577.0], [18.9, 578.0], [19.0, 579.0], [19.1, 580.0], [19.2, 581.0], [19.3, 582.0], [19.4, 583.0], [19.5, 584.0], [19.6, 585.0], [19.7, 586.0], [19.8, 587.0], [19.9, 588.0], [20.0, 589.0], [20.1, 591.0], [20.2, 591.0], [20.3, 592.0], [20.4, 593.0], [20.5, 594.0], [20.6, 595.0], [20.7, 596.0], [20.8, 597.0], [20.9, 598.0], [21.0, 598.0], [21.1, 599.0], [21.2, 600.0], [21.3, 600.0], [21.4, 601.0], [21.5, 602.0], [21.6, 602.0], [21.7, 603.0], [21.8, 604.0], [21.9, 605.0], [22.0, 606.0], [22.1, 606.0], [22.2, 607.0], [22.3, 608.0], [22.4, 608.0], [22.5, 609.0], [22.6, 611.0], [22.7, 612.0], [22.8, 613.0], [22.9, 614.0], [23.0, 614.0], [23.1, 615.0], [23.2, 615.0], [23.3, 616.0], [23.4, 617.0], [23.5, 617.0], [23.6, 619.0], [23.7, 619.0], [23.8, 620.0], [23.9, 620.0], [24.0, 621.0], [24.1, 622.0], [24.2, 623.0], [24.3, 623.0], [24.4, 624.0], [24.5, 625.0], [24.6, 626.0], [24.7, 627.0], [24.8, 629.0], [24.9, 630.0], [25.0, 632.0], [25.1, 634.0], [25.2, 634.0], [25.3, 636.0], [25.4, 638.0], [25.5, 638.0], [25.6, 639.0], [25.7, 642.0], [25.8, 644.0], [25.9, 647.0], [26.0, 649.0], [26.1, 652.0], [26.2, 656.0], [26.3, 657.0], [26.4, 658.0], [26.5, 660.0], [26.6, 662.0], [26.7, 664.0], [26.8, 667.0], [26.9, 669.0], [27.0, 673.0], [27.1, 676.0], [27.2, 681.0], [27.3, 683.0], [27.4, 685.0], [27.5, 688.0], [27.6, 691.0], [27.7, 695.0], [27.8, 697.0], [27.9, 701.0], [28.0, 705.0], [28.1, 708.0], [28.2, 710.0], [28.3, 712.0], [28.4, 714.0], [28.5, 717.0], [28.6, 719.0], [28.7, 724.0], [28.8, 726.0], [28.9, 730.0], [29.0, 732.0], [29.1, 734.0], [29.2, 736.0], [29.3, 738.0], [29.4, 740.0], [29.5, 743.0], [29.6, 744.0], [29.7, 749.0], [29.8, 756.0], [29.9, 758.0], [30.0, 760.0], [30.1, 763.0], [30.2, 766.0], [30.3, 768.0], [30.4, 774.0], [30.5, 783.0], [30.6, 788.0], [30.7, 791.0], [30.8, 794.0], [30.9, 797.0], [31.0, 798.0], [31.1, 799.0], [31.2, 802.0], [31.3, 807.0], [31.4, 811.0], [31.5, 814.0], [31.6, 819.0], [31.7, 821.0], [31.8, 826.0], [31.9, 831.0], [32.0, 836.0], [32.1, 846.0], [32.2, 882.0], [32.3, 895.0], [32.4, 916.0], [32.5, 961.0], [32.6, 1036.0], [32.7, 1058.0], [32.8, 1091.0], [32.9, 1119.0], [33.0, 1203.0], [33.1, 1273.0], [33.2, 1353.0], [33.3, 1460.0], [33.4, 1546.0], [33.5, 1737.0], [33.6, 1909.0], [33.7, 2628.0], [33.8, 3153.0], [33.9, 3800.0], [34.0, 4661.0], [34.1, 5232.0], [34.2, 6499.0], [34.3, 7026.0], [34.4, 7503.0], [34.5, 7846.0], [34.6, 8252.0], [34.7, 8718.0], [34.8, 9829.0], [34.9, 10284.0], [35.0, 10520.0], [35.1, 10889.0], [35.2, 11041.0], [35.3, 11211.0], [35.4, 11419.0], [35.5, 11600.0], [35.6, 11774.0], [35.7, 11865.0], [35.8, 11912.0], [35.9, 11977.0], [36.0, 12074.0], [36.1, 12133.0], [36.2, 12245.0], [36.3, 12330.0], [36.4, 12444.0], [36.5, 12645.0], [36.6, 12744.0], [36.7, 12835.0], [36.8, 12881.0], [36.9, 12962.0], [37.0, 13189.0], [37.1, 13372.0], [37.2, 13567.0], [37.3, 13789.0], [37.4, 13913.0], [37.5, 14102.0], [37.6, 14299.0], [37.7, 14313.0], [37.8, 14418.0], [37.9, 14430.0], [38.0, 14521.0], [38.1, 15328.0], [38.2, 15379.0], [38.3, 15392.0], [38.4, 15399.0], [38.5, 15469.0], [38.6, 15519.0], [38.7, 16348.0], [38.8, 16358.0], [38.9, 16374.0], [39.0, 16413.0], [39.1, 16421.0], [39.2, 16472.0], [39.3, 16484.0], [39.4, 16528.0], [39.5, 16549.0], [39.6, 17379.0], [39.7, 17393.0], [39.8, 17424.0], [39.9, 17444.0], [40.0, 17593.0], [40.1, 18452.0], [40.2, 18462.0], [40.3, 18506.0], [40.4, 18591.0], [40.5, 18961.0], [40.6, 20557.0], [40.7, 20575.0], [40.8, 20624.0], [40.9, 20633.0], [41.0, 20646.0], [41.1, 24243.0], [41.2, 24582.0], [41.3, 24615.0], [41.4, 24648.0], [41.5, 24845.0], [41.6, 25808.0], [41.7, 25865.0], [41.8, 25901.0], [41.9, 25929.0], [42.0, 25970.0], [42.1, 25996.0], [42.2, 26024.0], [42.3, 26060.0], [42.4, 26085.0], [42.5, 26111.0], [42.6, 26149.0], [42.7, 26182.0], [42.8, 26220.0], [42.9, 26247.0], [43.0, 26275.0], [43.1, 26329.0], [43.2, 26358.0], [43.3, 26380.0], [43.4, 26410.0], [43.5, 26422.0], [43.6, 26432.0], [43.7, 26460.0], [43.8, 26477.0], [43.9, 26500.0], [44.0, 26518.0], [44.1, 26534.0], [44.2, 26558.0], [44.3, 26572.0], [44.4, 26595.0], [44.5, 26608.0], [44.6, 26620.0], [44.7, 26630.0], [44.8, 26641.0], [44.9, 26654.0], [45.0, 26676.0], [45.1, 26688.0], [45.2, 26700.0], [45.3, 26723.0], [45.4, 26740.0], [45.5, 26761.0], [45.6, 26777.0], [45.7, 26791.0], [45.8, 26809.0], [45.9, 26820.0], [46.0, 26830.0], [46.1, 26841.0], [46.2, 26850.0], [46.3, 26866.0], [46.4, 26882.0], [46.5, 26907.0], [46.6, 26923.0], [46.7, 26935.0], [46.8, 26953.0], [46.9, 26960.0], [47.0, 26968.0], [47.1, 26975.0], [47.2, 26987.0], [47.3, 27010.0], [47.4, 27017.0], [47.5, 27028.0], [47.6, 27037.0], [47.7, 27046.0], [47.8, 27060.0], [47.9, 27065.0], [48.0, 27074.0], [48.1, 27093.0], [48.2, 27108.0], [48.3, 27117.0], [48.4, 27120.0], [48.5, 27127.0], [48.6, 27143.0], [48.7, 27151.0], [48.8, 27158.0], [48.9, 27177.0], [49.0, 27188.0], [49.1, 27195.0], [49.2, 27207.0], [49.3, 27222.0], [49.4, 27228.0], [49.5, 27233.0], [49.6, 27244.0], [49.7, 27252.0], [49.8, 27258.0], [49.9, 27272.0], [50.0, 27279.0], [50.1, 27292.0], [50.2, 27303.0], [50.3, 27311.0], [50.4, 27318.0], [50.5, 27323.0], [50.6, 27328.0], [50.7, 27340.0], [50.8, 27348.0], [50.9, 27354.0], [51.0, 27365.0], [51.1, 27371.0], [51.2, 27380.0], [51.3, 27386.0], [51.4, 27393.0], [51.5, 27403.0], [51.6, 27411.0], [51.7, 27421.0], [51.8, 27428.0], [51.9, 27433.0], [52.0, 27442.0], [52.1, 27450.0], [52.2, 27460.0], [52.3, 27468.0], [52.4, 27478.0], [52.5, 27484.0], [52.6, 27488.0], [52.7, 27494.0], [52.8, 27503.0], [52.9, 27509.0], [53.0, 27516.0], [53.1, 27533.0], [53.2, 27542.0], [53.3, 27551.0], [53.4, 27560.0], [53.5, 27570.0], [53.6, 27583.0], [53.7, 27589.0], [53.8, 27597.0], [53.9, 27603.0], [54.0, 27618.0], [54.1, 27623.0], [54.2, 27634.0], [54.3, 27650.0], [54.4, 27657.0], [54.5, 27665.0], [54.6, 27672.0], [54.7, 27679.0], [54.8, 27684.0], [54.9, 27694.0], [55.0, 27702.0], [55.1, 27710.0], [55.2, 27716.0], [55.3, 27725.0], [55.4, 27735.0], [55.5, 27742.0], [55.6, 27746.0], [55.7, 27751.0], [55.8, 27756.0], [55.9, 27772.0], [56.0, 27786.0], [56.1, 27794.0], [56.2, 27796.0], [56.3, 27805.0], [56.4, 27810.0], [56.5, 27815.0], [56.6, 27822.0], [56.7, 27832.0], [56.8, 27842.0], [56.9, 27859.0], [57.0, 27873.0], [57.1, 27882.0], [57.2, 27891.0], [57.3, 27898.0], [57.4, 27904.0], [57.5, 27913.0], [57.6, 27920.0], [57.7, 27928.0], [57.8, 27937.0], [57.9, 27945.0], [58.0, 27951.0], [58.1, 27969.0], [58.2, 27976.0], [58.3, 27985.0], [58.4, 27993.0], [58.5, 28005.0], [58.6, 28023.0], [58.7, 28041.0], [58.8, 28047.0], [58.9, 28056.0], [59.0, 28067.0], [59.1, 28075.0], [59.2, 28090.0], [59.3, 28096.0], [59.4, 28103.0], [59.5, 28111.0], [59.6, 28121.0], [59.7, 28127.0], [59.8, 28138.0], [59.9, 28149.0], [60.0, 28159.0], [60.1, 28174.0], [60.2, 28181.0], [60.3, 28188.0], [60.4, 28196.0], [60.5, 28207.0], [60.6, 28213.0], [60.7, 28230.0], [60.8, 28245.0], [60.9, 28252.0], [61.0, 28260.0], [61.1, 28269.0], [61.2, 28274.0], [61.3, 28282.0], [61.4, 28292.0], [61.5, 28297.0], [61.6, 28307.0], [61.7, 28314.0], [61.8, 28324.0], [61.9, 28334.0], [62.0, 28342.0], [62.1, 28350.0], [62.2, 28360.0], [62.3, 28381.0], [62.4, 28390.0], [62.5, 28400.0], [62.6, 28409.0], [62.7, 28415.0], [62.8, 28422.0], [62.9, 28431.0], [63.0, 28438.0], [63.1, 28451.0], [63.2, 28458.0], [63.3, 28465.0], [63.4, 28476.0], [63.5, 28484.0], [63.6, 28492.0], [63.7, 28497.0], [63.8, 28503.0], [63.9, 28512.0], [64.0, 28524.0], [64.1, 28534.0], [64.2, 28541.0], [64.3, 28548.0], [64.4, 28553.0], [64.5, 28558.0], [64.6, 28562.0], [64.7, 28573.0], [64.8, 28577.0], [64.9, 28587.0], [65.0, 28593.0], [65.1, 28599.0], [65.2, 28606.0], [65.3, 28611.0], [65.4, 28618.0], [65.5, 28627.0], [65.6, 28630.0], [65.7, 28640.0], [65.8, 28646.0], [65.9, 28656.0], [66.0, 28660.0], [66.1, 28670.0], [66.2, 28675.0], [66.3, 28686.0], [66.4, 28690.0], [66.5, 28697.0], [66.6, 28703.0], [66.7, 28721.0], [66.8, 28729.0], [66.9, 28738.0], [67.0, 28747.0], [67.1, 28754.0], [67.2, 28766.0], [67.3, 28777.0], [67.4, 28794.0], [67.5, 28800.0], [67.6, 28806.0], [67.7, 28813.0], [67.8, 28821.0], [67.9, 28832.0], [68.0, 28839.0], [68.1, 28848.0], [68.2, 28855.0], [68.3, 28861.0], [68.4, 28870.0], [68.5, 28882.0], [68.6, 28888.0], [68.7, 28895.0], [68.8, 28900.0], [68.9, 28906.0], [69.0, 28910.0], [69.1, 28916.0], [69.2, 28923.0], [69.3, 28931.0], [69.4, 28940.0], [69.5, 28948.0], [69.6, 28958.0], [69.7, 28966.0], [69.8, 28972.0], [69.9, 28987.0], [70.0, 28989.0], [70.1, 29001.0], [70.2, 29009.0], [70.3, 29016.0], [70.4, 29029.0], [70.5, 29033.0], [70.6, 29041.0], [70.7, 29048.0], [70.8, 29056.0], [70.9, 29065.0], [71.0, 29076.0], [71.1, 29091.0], [71.2, 29095.0], [71.3, 29109.0], [71.4, 29112.0], [71.5, 29124.0], [71.6, 29133.0], [71.7, 29139.0], [71.8, 29149.0], [71.9, 29155.0], [72.0, 29159.0], [72.1, 29163.0], [72.2, 29175.0], [72.3, 29182.0], [72.4, 29193.0], [72.5, 29197.0], [72.6, 29212.0], [72.7, 29218.0], [72.8, 29228.0], [72.9, 29246.0], [73.0, 29252.0], [73.1, 29258.0], [73.2, 29264.0], [73.3, 29277.0], [73.4, 29289.0], [73.5, 29296.0], [73.6, 29304.0], [73.7, 29312.0], [73.8, 29320.0], [73.9, 29329.0], [74.0, 29344.0], [74.1, 29355.0], [74.2, 29362.0], [74.3, 29368.0], [74.4, 29374.0], [74.5, 29384.0], [74.6, 29392.0], [74.7, 29402.0], [74.8, 29408.0], [74.9, 29411.0], [75.0, 29417.0], [75.1, 29429.0], [75.2, 29442.0], [75.3, 29449.0], [75.4, 29453.0], [75.5, 29461.0], [75.6, 29468.0], [75.7, 29476.0], [75.8, 29487.0], [75.9, 29493.0], [76.0, 29501.0], [76.1, 29506.0], [76.2, 29514.0], [76.3, 29520.0], [76.4, 29526.0], [76.5, 29538.0], [76.6, 29548.0], [76.7, 29561.0], [76.8, 29569.0], [76.9, 29580.0], [77.0, 29584.0], [77.1, 29587.0], [77.2, 29594.0], [77.3, 29608.0], [77.4, 29612.0], [77.5, 29627.0], [77.6, 29636.0], [77.7, 29639.0], [77.8, 29650.0], [77.9, 29656.0], [78.0, 29664.0], [78.1, 29670.0], [78.2, 29682.0], [78.3, 29694.0], [78.4, 29703.0], [78.5, 29714.0], [78.6, 29724.0], [78.7, 29732.0], [78.8, 29737.0], [78.9, 29750.0], [79.0, 29755.0], [79.1, 29764.0], [79.2, 29771.0], [79.3, 29777.0], [79.4, 29783.0], [79.5, 29790.0], [79.6, 29800.0], [79.7, 29802.0], [79.8, 29812.0], [79.9, 29824.0], [80.0, 29834.0], [80.1, 29844.0], [80.2, 29849.0], [80.3, 29853.0], [80.4, 29863.0], [80.5, 29877.0], [80.6, 29885.0], [80.7, 29897.0], [80.8, 29906.0], [80.9, 29914.0], [81.0, 29924.0], [81.1, 29931.0], [81.2, 29944.0], [81.3, 29951.0], [81.4, 29956.0], [81.5, 29961.0], [81.6, 29968.0], [81.7, 29977.0], [81.8, 29980.0], [81.9, 29986.0], [82.0, 29991.0], [82.1, 30002.0], [82.2, 30014.0], [82.3, 30019.0], [82.4, 30026.0], [82.5, 30031.0], [82.6, 30042.0], [82.7, 30046.0], [82.8, 30057.0], [82.9, 30061.0], [83.0, 30069.0], [83.1, 30074.0], [83.2, 30079.0], [83.3, 30089.0], [83.4, 30101.0], [83.5, 30111.0], [83.6, 30122.0], [83.7, 30128.0], [83.8, 30135.0], [83.9, 30138.0], [84.0, 30142.0], [84.1, 30153.0], [84.2, 30166.0], [84.3, 30173.0], [84.4, 30180.0], [84.5, 30187.0], [84.6, 30192.0], [84.7, 30201.0], [84.8, 30220.0], [84.9, 30227.0], [85.0, 30237.0], [85.1, 30239.0], [85.2, 30246.0], [85.3, 30264.0], [85.4, 30272.0], [85.5, 30281.0], [85.6, 30290.0], [85.7, 30295.0], [85.8, 30305.0], [85.9, 30318.0], [86.0, 30332.0], [86.1, 30347.0], [86.2, 30355.0], [86.3, 30369.0], [86.4, 30380.0], [86.5, 30392.0], [86.6, 30397.0], [86.7, 30407.0], [86.8, 30414.0], [86.9, 30424.0], [87.0, 30427.0], [87.1, 30434.0], [87.2, 30441.0], [87.3, 30446.0], [87.4, 30457.0], [87.5, 30463.0], [87.6, 30475.0], [87.7, 30487.0], [87.8, 30497.0], [87.9, 30502.0], [88.0, 30510.0], [88.1, 30515.0], [88.2, 30526.0], [88.3, 30535.0], [88.4, 30542.0], [88.5, 30549.0], [88.6, 30555.0], [88.7, 30561.0], [88.8, 30569.0], [88.9, 30575.0], [89.0, 30589.0], [89.1, 30596.0], [89.2, 30605.0], [89.3, 30614.0], [89.4, 30621.0], [89.5, 30627.0], [89.6, 30631.0], [89.7, 30642.0], [89.8, 30653.0], [89.9, 30661.0], [90.0, 30669.0], [90.1, 30677.0], [90.2, 30687.0], [90.3, 30697.0], [90.4, 30702.0], [90.5, 30712.0], [90.6, 30723.0], [90.7, 30729.0], [90.8, 30740.0], [90.9, 30746.0], [91.0, 30759.0], [91.1, 30770.0], [91.2, 30782.0], [91.3, 30792.0], [91.4, 30801.0], [91.5, 30806.0], [91.6, 30817.0], [91.7, 30833.0], [91.8, 30843.0], [91.9, 30849.0], [92.0, 30862.0], [92.1, 30871.0], [92.2, 30877.0], [92.3, 30888.0], [92.4, 30904.0], [92.5, 30921.0], [92.6, 30937.0], [92.7, 30949.0], [92.8, 30958.0], [92.9, 30970.0], [93.0, 30980.0], [93.1, 30990.0], [93.2, 31001.0], [93.3, 31016.0], [93.4, 31023.0], [93.5, 31034.0], [93.6, 31046.0], [93.7, 31058.0], [93.8, 31071.0], [93.9, 31084.0], [94.0, 31091.0], [94.1, 31109.0], [94.2, 31122.0], [94.3, 31128.0], [94.4, 31136.0], [94.5, 31141.0], [94.6, 31158.0], [94.7, 31167.0], [94.8, 31181.0], [94.9, 31186.0], [95.0, 31197.0], [95.1, 31207.0], [95.2, 31221.0], [95.3, 31232.0], [95.4, 31236.0], [95.5, 31245.0], [95.6, 31254.0], [95.7, 31274.0], [95.8, 31288.0], [95.9, 31298.0], [96.0, 31305.0], [96.1, 31317.0], [96.2, 31323.0], [96.3, 31340.0], [96.4, 31353.0], [96.5, 31368.0], [96.6, 31381.0], [96.7, 31390.0], [96.8, 31404.0], [96.9, 31420.0], [97.0, 31438.0], [97.1, 31447.0], [97.2, 31455.0], [97.3, 31483.0], [97.4, 31492.0], [97.5, 31505.0], [97.6, 31513.0], [97.7, 31521.0], [97.8, 31533.0], [97.9, 31566.0], [98.0, 31592.0], [98.1, 31616.0], [98.2, 31630.0], [98.3, 31648.0], [98.4, 31661.0], [98.5, 31673.0], [98.6, 31687.0], [98.7, 31701.0], [98.8, 31718.0], [98.9, 31732.0], [99.0, 31770.0], [99.1, 31799.0], [99.2, 31808.0], [99.3, 31846.0], [99.4, 31894.0], [99.5, 31919.0], [99.6, 31961.0], [99.7, 31992.0], [99.8, 32030.0], [99.9, 32105.0]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 751.0, "series": [{"data": [[0.0, 33.0], [100.0, 81.0], [200.0, 246.0], [300.0, 286.0], [400.0, 285.0], [500.0, 751.0], [600.0, 531.0], [700.0, 260.0], [800.0, 94.0], [900.0, 17.0], [1000.0, 26.0], [1100.0, 11.0], [1200.0, 14.0], [1300.0, 4.0], [1400.0, 8.0], [1500.0, 10.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 6.0], [1900.0, 2.0], [2000.0, 1.0], [2200.0, 1.0], [2400.0, 4.0], [2600.0, 2.0], [2800.0, 2.0], [2700.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 3.0], [3500.0, 1.0], [3700.0, 2.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 1.0], [4400.0, 2.0], [4500.0, 1.0], [4600.0, 1.0], [4700.0, 4.0], [4800.0, 1.0], [5000.0, 2.0], [5300.0, 2.0], [5200.0, 1.0], [5500.0, 1.0], [5800.0, 1.0], [6100.0, 1.0], [6500.0, 3.0], [6400.0, 3.0], [6600.0, 1.0], [6900.0, 2.0], [6700.0, 1.0], [7000.0, 3.0], [7100.0, 2.0], [7200.0, 1.0], [7300.0, 1.0], [7400.0, 1.0], [7500.0, 6.0], [7600.0, 1.0], [7900.0, 1.0], [7700.0, 1.0], [7800.0, 1.0], [8000.0, 5.0], [8700.0, 2.0], [8600.0, 2.0], [8200.0, 2.0], [8300.0, 1.0], [8400.0, 4.0], [9200.0, 1.0], [9000.0, 2.0], [9700.0, 1.0], [9500.0, 1.0], [10200.0, 4.0], [9800.0, 4.0], [10000.0, 3.0], [10700.0, 1.0], [10300.0, 4.0], [10400.0, 2.0], [10500.0, 1.0], [10600.0, 1.0], [10900.0, 5.0], [10800.0, 5.0], [11000.0, 5.0], [11100.0, 4.0], [11200.0, 3.0], [11300.0, 5.0], [11400.0, 3.0], [11500.0, 6.0], [11600.0, 7.0], [11700.0, 2.0], [11800.0, 13.0], [12000.0, 12.0], [11900.0, 11.0], [12100.0, 8.0], [12200.0, 8.0], [12300.0, 9.0], [12600.0, 4.0], [12700.0, 9.0], [12400.0, 6.0], [12500.0, 4.0], [12800.0, 14.0], [13000.0, 4.0], [12900.0, 6.0], [13100.0, 3.0], [13300.0, 2.0], [13200.0, 6.0], [13800.0, 5.0], [13500.0, 5.0], [13400.0, 3.0], [13700.0, 8.0], [14300.0, 12.0], [14200.0, 6.0], [13900.0, 8.0], [14000.0, 2.0], [14100.0, 3.0], [14400.0, 19.0], [14500.0, 6.0], [14900.0, 1.0], [15300.0, 26.0], [15400.0, 11.0], [15500.0, 8.0], [15900.0, 1.0], [16300.0, 20.0], [16400.0, 38.0], [17400.0, 17.0], [17600.0, 2.0], [18400.0, 16.0], [18600.0, 2.0], [20400.0, 4.0], [21200.0, 1.0], [20600.0, 20.0], [21800.0, 1.0], [22400.0, 1.0], [23000.0, 1.0], [23600.0, 1.0], [24200.0, 1.0], [24400.0, 1.0], [24800.0, 3.0], [25400.0, 1.0], [24600.0, 17.0], [25800.0, 16.0], [26600.0, 61.0], [26200.0, 26.0], [26400.0, 41.0], [26000.0, 28.0], [27600.0, 86.0], [26800.0, 54.0], [27200.0, 82.0], [27400.0, 104.0], [27000.0, 71.0], [28400.0, 98.0], [27800.0, 86.0], [28600.0, 113.0], [28200.0, 87.0], [28000.0, 72.0], [29200.0, 83.0], [29400.0, 104.0], [28800.0, 103.0], [29600.0, 91.0], [29000.0, 88.0], [29800.0, 91.0], [30000.0, 102.0], [30200.0, 81.0], [30600.0, 95.0], [30400.0, 96.0], [30800.0, 79.0], [31000.0, 70.0], [31200.0, 75.0], [31400.0, 55.0], [31600.0, 51.0], [31800.0, 23.0], [32000.0, 12.0], [17100.0, 2.0], [17300.0, 17.0], [16500.0, 10.0], [17700.0, 1.0], [17500.0, 5.0], [18900.0, 2.0], [18500.0, 14.0], [19500.0, 1.0], [20100.0, 1.0], [20700.0, 1.0], [20500.0, 15.0], [24500.0, 8.0], [24700.0, 5.0], [26100.0, 19.0], [25700.0, 3.0], [26500.0, 42.0], [26300.0, 26.0], [25900.0, 27.0], [27100.0, 79.0], [26900.0, 64.0], [27500.0, 85.0], [27300.0, 102.0], [26700.0, 47.0], [28500.0, 110.0], [27700.0, 104.0], [28300.0, 78.0], [27900.0, 88.0], [28100.0, 86.0], [28900.0, 106.0], [28700.0, 74.0], [29300.0, 88.0], [29500.0, 99.0], [29100.0, 104.0], [30100.0, 105.0], [30500.0, 105.0], [30300.0, 72.0], [30700.0, 82.0], [29900.0, 108.0], [29700.0, 96.0], [30900.0, 64.0], [31100.0, 75.0], [31300.0, 64.0], [31500.0, 47.0], [31700.0, 36.0], [31900.0, 25.0], [32100.0, 9.0]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 32100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 11.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 7932.0, "series": [{"data": [[0.0, 11.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [[3.0, 7932.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3405.273901808786, "minX": 1.75927146E12, "maxY": 3408.580333509815, "series": [{"data": [[1.75927152E12, 3408.580333509815], [1.75927146E12, 3405.273901808786]], "isOverall": false, "label": "Thread GroupMy Test1000", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927152E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 121.0, "maxY": 32060.0, "series": [{"data": [[123.0, 27945.0], [121.0, 28293.118644067792], [122.0, 31566.0], [126.0, 28857.0], [125.0, 14404.0], [124.0, 30623.0], [134.0, 30744.833333333332], [132.0, 31058.0], [129.0, 13372.0], [139.0, 27961.0], [138.0, 30396.0], [136.0, 29839.5], [151.0, 29725.0], [147.0, 30548.0], [145.0, 29195.0], [144.0, 29170.5], [157.0, 28809.0], [152.0, 30764.0], [166.0, 31141.0], [172.0, 31401.0], [173.0, 28360.0], [171.0, 29289.666666666668], [179.0, 29911.8], [176.0, 30496.0], [180.0, 29550.0], [181.0, 29707.0], [178.0, 30323.4], [182.0, 31689.0], [177.0, 29594.0], [191.0, 20363.5], [190.0, 27583.0], [187.0, 837.0], [185.0, 29452.0], [184.0, 14379.0], [186.0, 31564.0], [197.0, 30130.5], [196.0, 29095.0], [195.0, 28723.0], [192.0, 29624.0], [193.0, 29977.0], [206.0, 30632.333333333332], [205.0, 29252.0], [204.0, 12330.0], [202.0, 27269.0], [201.0, 30103.0], [200.0, 29453.5], [215.0, 28940.0], [211.0, 30389.0], [209.0, 29872.5], [223.0, 30291.0], [220.0, 29314.0], [216.0, 21214.0], [218.0, 31711.5], [228.0, 30604.0], [224.0, 30771.5], [239.0, 30279.0], [237.0, 27384.0], [236.0, 29194.0], [234.0, 29128.666666666668], [240.0, 30805.0], [246.0, 31853.0], [245.0, 32013.0], [250.0, 28462.0], [255.0, 31876.0], [269.0, 30602.25], [271.0, 28497.0], [264.0, 28996.666666666668], [265.0, 28369.0], [267.0, 31704.0], [268.0, 29878.0], [263.0, 29155.5], [270.0, 29414.6], [260.0, 29809.0], [258.0, 30276.5], [259.0, 29467.75], [262.0, 30477.5], [261.0, 30585.0], [287.0, 29510.0], [286.0, 29348.0], [283.0, 29249.0], [281.0, 23337.333333333332], [276.0, 28556.5], [274.0, 29116.14285714286], [272.0, 29897.0], [273.0, 29338.0], [303.0, 31317.0], [300.0, 29075.0], [299.0, 27970.0], [297.0, 23811.0], [294.0, 23454.0], [293.0, 31252.0], [291.0, 29778.0], [298.0, 31453.0], [289.0, 30331.25], [317.0, 29521.0], [316.0, 28729.0], [314.0, 27758.0], [313.0, 27380.0], [312.0, 28859.0], [319.0, 31799.0], [311.0, 28617.0], [310.0, 29652.0], [308.0, 30165.0], [307.0, 29058.666666666668], [335.0, 28998.0], [333.0, 31275.666666666668], [332.0, 31659.25], [331.0, 28387.5], [328.0, 30467.0], [327.0, 28862.333333333332], [323.0, 30944.5], [322.0, 17243.0], [351.0, 20063.5], [350.0, 29199.5], [347.0, 14610.0], [345.0, 27598.0], [343.0, 30668.0], [342.0, 29511.0], [340.0, 30620.0], [341.0, 32060.0], [338.0, 27284.0], [337.0, 29572.5], [366.0, 29506.5], [364.0, 28355.0], [363.0, 27907.0], [359.0, 30846.0], [358.0, 14718.0], [355.0, 31400.0], [353.0, 30529.0], [360.0, 31438.0], [380.0, 29110.0], [381.0, 31109.0], [376.0, 29852.5], [374.0, 29306.0], [373.0, 27609.0], [372.0, 28383.666666666668], [370.0, 28510.0], [368.0, 29827.0], [398.0, 22420.5], [397.0, 29946.0], [393.0, 20723.0], [391.0, 27646.0], [389.0, 24319.8], [388.0, 29621.0], [385.0, 29563.0], [387.0, 30291.0], [414.0, 28971.0], [413.0, 29900.0], [410.0, 28539.5], [408.0, 29173.75], [405.0, 13294.0], [403.0, 30560.333333333332], [402.0, 29995.666666666668], [401.0, 28612.5], [409.0, 31533.0], [428.0, 31161.0], [430.0, 27652.0], [431.0, 27935.0], [429.0, 29254.0], [426.0, 29755.0], [425.0, 21036.0], [421.0, 29534.666666666668], [420.0, 29586.0], [419.0, 29711.0], [417.0, 29344.0], [416.0, 30823.5], [440.0, 28354.0], [444.0, 28270.0], [443.0, 29273.0], [442.0, 31133.0], [441.0, 30441.0], [439.0, 4.0], [437.0, 29875.5], [436.0, 28866.0], [434.0, 27488.0], [432.0, 29740.0], [460.0, 28265.5], [463.0, 27235.0], [462.0, 31515.0], [461.0, 30682.25], [458.0, 28625.0], [455.0, 29456.333333333332], [450.0, 28698.0], [449.0, 31319.0], [454.0, 14313.0], [453.0, 29267.0], [452.0, 30654.0], [476.0, 12262.0], [479.0, 29799.0], [478.0, 28277.0], [473.0, 9948.0], [471.0, 28208.5], [477.0, 31673.0], [469.0, 28176.0], [468.0, 29717.0], [467.0, 29564.0], [464.0, 29880.0], [495.0, 30441.0], [494.0, 30020.0], [490.0, 27573.0], [487.0, 31256.0], [485.0, 29449.0], [483.0, 28000.5], [482.0, 25228.333333333332], [480.0, 31019.0], [498.0, 29102.0], [510.0, 29397.5], [509.0, 28388.0], [506.0, 29965.0], [507.0, 31665.0], [505.0, 28562.0], [504.0, 29964.0], [511.0, 31770.0], [502.0, 29552.333333333332], [500.0, 29315.0], [497.0, 30606.0], [496.0, 27551.0], [518.0, 28832.0], [540.0, 18666.333333333332], [542.0, 30724.0], [536.0, 29087.0], [534.0, 30331.5], [530.0, 29355.0], [526.0, 29702.0], [522.0, 28294.333333333332], [514.0, 25726.75], [512.0, 30740.0], [572.0, 30598.0], [568.0, 31896.5], [564.0, 30600.0], [562.0, 28336.5], [560.0, 12243.0], [546.0, 31305.0], [604.0, 30189.0], [606.0, 31745.0], [600.0, 27805.0], [582.0, 31038.0], [580.0, 27472.0], [576.0, 26763.5], [598.0, 29997.5], [596.0, 27498.0], [594.0, 28431.0], [590.0, 13242.0], [588.0, 31384.0], [586.0, 31626.0], [614.0, 29442.5], [628.0, 29125.0], [630.0, 27699.0], [626.0, 29402.0], [622.0, 29567.0], [620.0, 29361.0], [618.0, 29425.0], [616.0, 30853.0], [612.0, 13235.0], [610.0, 30130.0], [608.0, 29862.0], [670.0, 30535.333333333332], [668.0, 29429.5], [660.0, 29996.0], [656.0, 21867.0], [654.0, 30242.0], [646.0, 27629.0], [644.0, 30961.0], [640.0, 29039.0], [698.0, 29620.0], [702.0, 29726.0], [696.0, 27638.333333333332], [692.0, 28212.0], [690.0, 29737.0], [688.0, 30938.0], [682.0, 13484.0], [680.0, 30407.0], [678.0, 28980.0], [676.0, 29417.0], [710.0, 29314.75], [724.0, 20288.5], [730.0, 30339.666666666668], [726.0, 27587.0], [718.0, 12188.0], [716.0, 28105.0], [714.0, 21030.0], [712.0, 28970.0], [706.0, 29412.0], [704.0, 30153.0], [760.0, 23943.0], [764.0, 27258.0], [766.0, 27480.5], [762.0, 29367.0], [758.0, 29196.0], [754.0, 30198.0], [748.0, 31404.0], [744.0, 27483.0], [742.0, 28156.333333333332], [736.0, 29305.0], [794.0, 29804.0], [796.0, 29319.0], [792.0, 31557.0], [788.0, 31261.0], [784.0, 29639.5], [782.0, 29133.0], [780.0, 27857.0], [778.0, 31974.0], [770.0, 28484.0], [768.0, 28550.0], [806.0, 31222.0], [828.0, 30153.571428571428], [826.0, 29878.0], [822.0, 31956.0], [816.0, 31475.5], [814.0, 31128.0], [812.0, 28738.333333333332], [802.0, 27243.0], [800.0, 30072.0], [858.0, 3186.0], [854.0, 30697.333333333332], [852.0, 28912.58823529412], [892.0, 12125.0], [894.0, 28434.0], [890.0, 28954.0], [888.0, 27328.0], [884.0, 30462.333333333332], [882.0, 24673.0], [880.0, 31276.0], [878.0, 27414.0], [866.0, 1353.0], [864.0, 27584.6], [920.0, 22230.0], [918.0, 29630.0], [914.0, 29119.0], [908.0, 29544.333333333332], [904.0, 30559.0], [902.0, 29264.333333333332], [958.0, 30153.0], [952.0, 14082.0], [950.0, 16798.5], [948.0, 29916.0], [946.0, 29684.5], [942.0, 30312.5], [938.0, 30746.0], [934.0, 17822.0], [932.0, 27193.0], [984.0, 30285.5], [990.0, 27290.0], [978.0, 30025.0], [976.0, 527.0], [974.0, 29724.0], [988.0, 31897.0], [968.0, 28067.0], [964.0, 30549.5], [962.0, 30269.5], [960.0, 30348.5], [996.0, 45.0], [1020.0, 30378.0], [1014.0, 14906.5], [1018.0, 28134.666666666668], [1012.0, 28462.0], [1010.0, 29163.333333333332], [1006.0, 29719.25], [1000.0, 28503.0], [994.0, 30434.0], [992.0, 29017.0], [1076.0, 20485.0], [1060.0, 18894.0], [1084.0, 31796.0], [1080.0, 28046.0], [1068.0, 29939.75], [1048.0, 28090.333333333332], [1044.0, 30086.666666666668], [1036.0, 28600.5], [1032.0, 28181.0], [1028.0, 29833.0], [1024.0, 12085.0], [1140.0, 62.0], [1108.0, 71.0], [1148.0, 29892.0], [1136.0, 29420.5], [1120.0, 20326.5], [1112.0, 20215.0], [1104.0, 30229.0], [1092.0, 27147.0], [1088.0, 30237.0], [1204.0, 31385.0], [1180.0, 20483.0], [1212.0, 29978.0], [1200.0, 31378.0], [1164.0, 27093.0], [1160.0, 30843.0], [1156.0, 29782.0], [1152.0, 28217.0], [1196.0, 27861.0], [1192.0, 27063.0], [1188.0, 28055.0], [1184.0, 28458.5], [1176.0, 29641.5], [1216.0, 304.5], [1244.0, 78.0], [1268.0, 1280.5], [1252.0, 29144.0], [1296.0, 30923.0], [1332.0, 31427.0], [1288.0, 30751.0], [1344.0, 27897.0], [1384.0, 28249.0], [1396.0, 29488.5], [1400.0, 28946.0], [1456.0, 29507.0], [1444.0, 30077.0], [1436.0, 28586.333333333332], [1420.0, 29975.0], [1464.0, 30318.0], [1468.0, 29092.0], [1472.0, 31234.0], [1480.0, 31221.0], [1484.0, 28271.0], [1516.0, 27772.0], [1528.0, 14018.0], [1532.0, 29803.0], [1544.0, 13842.0], [1568.0, 15160.5], [1580.0, 14867.0], [1596.0, 15930.0], [1572.0, 29519.0], [1648.0, 15112.0], [1632.0, 27405.0], [1644.0, 29521.0], [1684.0, 138.0], [1720.0, 139.0], [1700.0, 29263.0], [1688.0, 28645.0], [1680.0, 30736.0], [1708.0, 27685.0], [1748.0, 153.0], [1768.0, 127.0], [1784.0, 28463.0], [1772.0, 30732.0], [1736.0, 30870.0], [1792.0, 133.0], [1848.0, 28148.0], [1880.0, 132.0], [1888.0, 30756.0], [1876.0, 30936.0], [1932.0, 13585.0], [1972.0, 19854.0], [1980.0, 29893.0], [1968.0, 27895.940740740738], [1960.0, 27975.0], [1992.0, 29726.666666666668], [2036.0, 14008.0], [1988.0, 30429.0], [2008.0, 19999.666666666668], [2004.0, 29862.0], [2012.0, 28965.0], [2044.0, 29208.0], [2016.0, 26789.0], [2040.0, 27060.0], [2032.0, 27276.0], [2056.0, 28593.0], [2144.0, 29147.0], [2168.0, 29479.0], [2064.0, 29839.5], [2104.0, 22887.0], [2096.0, 28487.0], [2088.0, 8002.0], [2080.0, 29147.0], [2136.0, 27981.0], [2128.0, 13879.0], [2112.0, 30659.0], [2160.0, 29931.333333333332], [2152.0, 28724.0], [2176.0, 31663.0], [2288.0, 29625.0], [2224.0, 189.0], [2216.0, 30023.5], [2208.0, 31436.0], [2232.0, 28366.0], [2240.0, 28917.0], [2272.0, 27016.0], [2264.0, 29169.0], [2256.0, 27112.0], [2320.0, 30552.5], [2336.0, 29967.0], [2304.0, 30422.0], [2312.0, 28902.0], [2352.0, 15783.0], [2384.0, 30712.0], [2368.0, 27731.0], [2392.0, 27542.0], [2424.0, 19646.0], [2408.0, 29543.0], [2400.0, 28852.0], [2528.0, 27226.0], [2536.0, 13089.0], [2552.0, 27684.0], [2544.0, 29442.5], [2456.0, 30958.0], [2448.0, 29396.5], [2432.0, 26703.0], [2488.0, 21206.5], [2480.0, 27165.0], [2464.0, 30328.0], [2520.0, 9931.666666666668], [2504.0, 29105.0], [2496.0, 21034.5], [2656.0, 30044.0], [2608.0, 13437.5], [2592.0, 28890.0], [2624.0, 29892.0], [2632.0, 28465.0], [2672.0, 31131.0], [2584.0, 4661.0], [2576.0, 27348.0], [2560.0, 28360.0], [2648.0, 28909.0], [2704.0, 30784.0], [2808.0, 28330.0], [2800.0, 29611.5], [2792.0, 29960.0], [2768.0, 28207.5], [2760.0, 13706.0], [2744.0, 19854.5], [2688.0, 27354.0], [2696.0, 29112.0], [2712.0, 30513.0], [2736.0, 19507.0], [2728.0, 27094.0], [2920.0, 28882.0], [2816.0, 14260.0], [2872.0, 29462.0], [2864.0, 11126.0], [2848.0, 28621.5], [2832.0, 13973.0], [2880.0, 30807.0], [2888.0, 29632.0], [2896.0, 29673.0], [2936.0, 31384.0], [2912.0, 19899.5], [2840.0, 30186.0], [2904.0, 27458.0], [2944.0, 27928.0], [2960.0, 257.0], [2992.0, 28237.0], [2984.0, 29673.0], [2976.0, 30977.0], [3000.0, 29368.0], [3016.0, 28612.0], [3008.0, 30442.0], [3024.0, 30919.0], [3032.0, 27584.0], [3064.0, 31201.333333333332], [3056.0, 28652.0], [3040.0, 27813.0], [2968.0, 28024.0], [3096.0, 30927.0], [3192.0, 21416.5], [3120.0, 14803.5], [3112.0, 30181.0], [3104.0, 28640.0], [3088.0, 26518.0], [3128.0, 30451.5], [3152.0, 30398.0], [3144.0, 12555.0], [3176.0, 28521.333333333332], [3160.0, 18531.0], [3224.0, 19344.333333333332], [3232.0, 30875.5], [3216.0, 29094.0], [3248.0, 5832.0], [3208.0, 30487.0], [3288.0, 30418.0], [3352.0, 1784.0], [3504.0, 244.0], [3528.0, 246.0], [3480.0, 27365.0], [3680.0, 18908.5], [3608.0, 3587.0], [3688.0, 27763.5], [3592.0, 238.0], [3632.0, 247.0], [3664.0, 29222.0], [3656.0, 29062.0], [3672.0, 30406.0], [3704.0, 21473.5], [3696.0, 30470.0], [3728.0, 27950.5], [3720.0, 14436.5], [3736.0, 27328.0], [3808.0, 29801.0], [3816.0, 26087.0], [3768.0, 14944.5], [3760.0, 27179.0], [3752.0, 29720.5], [3744.0, 28046.0], [3792.0, 10628.0], [3800.0, 26203.0], [3824.0, 29415.0], [3832.0, 28128.0], [3776.0, 27113.0], [3936.0, 26048.0], [3840.0, 249.0], [3848.0, 29812.0], [3856.0, 28444.0], [3880.0, 28922.0], [3872.0, 28669.0], [3928.0, 20461.333333333332], [3944.0, 28209.25], [3952.0, 28390.0], [3912.0, 28351.0], [3960.0, 30426.0], [3968.0, 28435.0], [3992.0, 13149.5], [4016.0, 13983.0], [4000.0, 26235.0], [4008.0, 26810.0], [4024.0, 29280.0], [3976.0, 28718.0], [3984.0, 14276.5], [4040.0, 26849.0], [4048.0, 29455.0], [4072.0, 15166.5], [4064.0, 28157.0], [4080.0, 26572.0], [4088.0, 20244.666666666668], [4144.0, 27244.0], [4192.0, 18660.0], [4208.0, 14450.0], [4224.0, 29135.0], [4560.0, 274.0], [4416.0, 296.0], [4640.0, 288.0], [4832.0, 28900.0], [4976.0, 29423.0], [4960.0, 13419.0], [4992.0, 13090.5], [4145.0, 30611.0], [4321.0, 29277.333333333332], [4161.0, 20383.5], [4177.0, 29489.5], [4209.0, 29176.5], [4113.0, 29052.5], [4225.0, 14720.5], [4273.0, 318.0], [4545.0, 304.0], [4465.0, 303.0], [4817.0, 354.0], [4753.0, 26001.0], [4689.0, 287.0], [4705.0, 27773.5], [4721.0, 288.0], [4769.0, 325.0], [4961.0, 26366.0], [4977.0, 30267.0], [2097.0, 31662.0], [2049.0, 29312.25], [2089.0, 28262.0], [2081.0, 29293.0], [2129.0, 19386.0], [2161.0, 27437.0], [2153.0, 16139.0], [2073.0, 31302.0], [2137.0, 29420.0], [2201.0, 19930.5], [2177.0, 5745.0], [2233.0, 29764.0], [2225.0, 31136.0], [2273.0, 13784.0], [2185.0, 27252.0], [2297.0, 13459.5], [2241.0, 29647.0], [2249.0, 31072.0], [2289.0, 30313.0], [2281.0, 30286.0], [2329.0, 30866.5], [2409.0, 31439.0], [2321.0, 28587.0], [2313.0, 29114.0], [2393.0, 19810.0], [2385.0, 28574.0], [2377.0, 29753.0], [2353.0, 27192.0], [2441.0, 28638.0], [2433.0, 29411.0], [2449.0, 241.0], [2489.0, 30322.0], [2481.0, 30351.0], [2473.0, 28531.5], [2465.0, 30893.0], [2553.0, 31268.0], [2497.0, 29722.5], [2537.0, 31494.0], [2529.0, 28603.0], [2513.0, 20321.5], [2585.0, 27340.0], [2569.0, 29499.0], [2617.0, 29257.5], [2609.0, 30389.5], [2601.0, 30882.5], [2593.0, 27818.0], [2681.0, 27362.0], [2649.0, 29264.0], [2641.0, 27898.0], [2633.0, 28688.5], [2625.0, 28842.0], [2737.0, 29730.5], [2697.0, 26761.0], [2729.0, 28278.0], [2793.0, 27786.0], [2785.0, 30745.5], [2713.0, 23256.0], [2777.0, 22979.0], [2769.0, 28830.0], [2825.0, 23253.333333333332], [2817.0, 30930.333333333332], [2841.0, 28644.0], [2873.0, 27484.0], [2865.0, 27437.0], [2857.0, 29732.0], [2929.0, 30548.0], [2889.0, 31158.0], [2881.0, 18228.0], [2953.0, 28809.0], [2945.0, 27296.0], [2961.0, 29281.0], [2969.0, 27882.0], [2985.0, 30463.0], [3001.0, 30221.0], [2993.0, 30015.0], [3065.0, 30192.0], [3009.0, 29237.5], [3017.0, 27557.0], [3025.0, 30008.5], [3057.0, 35.0], [3041.0, 29363.0], [3089.0, 30002.0], [3145.0, 29179.0], [3185.0, 29175.0], [3169.0, 29281.5], [3081.0, 27342.0], [3121.0, 29066.0], [3113.0, 29669.0], [3105.0, 31028.0], [3161.0, 28825.0], [3153.0, 28506.0], [3217.0, 27588.0], [3225.0, 26779.0], [3233.0, 28045.0], [3201.0, 28579.5], [3385.0, 245.0], [3705.0, 29338.0], [3609.0, 244.0], [3649.0, 27439.0], [3689.0, 29369.0], [3825.0, 28996.5], [3745.0, 252.0], [3777.0, 28776.0], [3801.0, 98.0], [3833.0, 29329.0], [3817.0, 28558.0], [3809.0, 30804.0], [3737.0, 14382.0], [3769.0, 13753.5], [3865.0, 29687.0], [3857.0, 27317.0], [3937.0, 26219.0], [3945.0, 702.0], [3881.0, 29214.0], [3897.0, 19726.333333333332], [3841.0, 28593.5], [3849.0, 29302.5], [3905.0, 26019.0], [3921.0, 28309.5], [3929.0, 26506.0], [3953.0, 26220.0], [3977.0, 258.0], [3969.0, 26829.0], [3985.0, 26646.0], [3993.0, 29442.0], [4025.0, 27802.0], [4017.0, 21303.5], [4001.0, 30639.0], [4065.0, 26669.0], [4049.0, 16285.0], [4041.0, 15972.5], [4033.0, 29089.0], [4057.0, 27497.5], [4073.0, 30340.5], [4098.0, 14372.5], [4114.0, 15115.0], [4130.0, 26529.0], [4178.0, 27930.0], [4162.0, 28595.0], [4322.0, 316.0], [4498.0, 312.0], [4962.0, 12840.0], [4994.0, 14671.5], [4099.0, 27898.0], [4147.0, 30742.0], [4163.0, 27248.0], [4179.0, 14343.5], [4195.0, 29129.333333333332], [4211.0, 28439.5], [4227.0, 13542.5], [4403.0, 297.0], [4451.0, 29951.0], [4627.0, 13219.5], [4739.0, 27943.0], [4947.0, 343.0], [4963.0, 28446.0], [4931.0, 341.0], [4979.0, 29032.5], [4995.0, 26839.0], [1081.0, 5014.0], [1073.0, 30060.0], [1069.0, 731.0], [1049.0, 27272.0], [1045.0, 16049.0], [1037.0, 27157.0], [1033.0, 28202.0], [1025.0, 29636.0], [1101.0, 27249.0], [1137.0, 28828.75], [1129.0, 28405.0], [1125.0, 13078.0], [1117.0, 8223.0], [1113.0, 27099.0], [1097.0, 30894.0], [1093.0, 27597.0], [1089.0, 30103.0], [1209.0, 27855.0], [1205.0, 76.0], [1157.0, 28721.0], [1153.0, 30974.0], [1213.0, 29341.0], [1197.0, 27305.0], [1193.0, 27410.0], [1189.0, 551.0], [1181.0, 29300.0], [1173.0, 28636.666666666668], [1169.0, 28278.5], [1273.0, 30846.0], [1229.0, 27219.0], [1341.0, 97.0], [1321.0, 31842.0], [1285.0, 28441.0], [1377.0, 60.0], [1389.0, 60.0], [1397.0, 28559.0], [1365.0, 28689.0], [1381.0, 29703.0], [1405.0, 29981.0], [1437.0, 1428.0], [1461.0, 28628.0], [1429.0, 1237.0], [1433.0, 28848.0], [1421.0, 27002.0], [1441.0, 30256.0], [1509.0, 20249.333333333332], [1521.0, 131.0], [1493.0, 31055.0], [1517.0, 31133.0], [1557.0, 118.0], [1597.0, 142.0], [1561.0, 28204.0], [1581.0, 27419.0], [1641.0, 150.0], [1653.0, 28111.0], [1625.0, 28789.0], [1617.0, 31180.0], [1605.0, 31370.0], [1677.0, 28773.0], [1689.0, 29630.0], [1705.0, 27033.0], [1721.0, 31291.0], [1753.0, 29751.0], [1745.0, 29828.0], [1765.0, 30780.5], [1829.0, 135.0], [1805.0, 28944.0], [1869.0, 140.0], [1901.0, 1021.5], [1865.0, 29961.0], [1881.0, 27863.0], [1909.0, 27742.0], [1957.0, 153.0], [1977.0, 29421.666666666668], [1973.0, 15751.5], [1961.0, 28096.0], [1945.0, 28599.0], [1997.0, 28734.666666666668], [2017.0, 30656.666666666668], [2045.0, 29406.0], [2033.0, 29058.5], [1985.0, 29863.0], [1993.0, 29517.0], [2009.0, 29972.0], [2005.0, 29742.5], [2029.0, 7503.0], [2025.0, 29211.5], [2154.0, 181.0], [2050.0, 29653.0], [2058.0, 29216.5], [2074.0, 30272.0], [2098.0, 28670.0], [2170.0, 27723.0], [2114.0, 28085.666666666668], [2130.0, 27666.0], [2122.0, 28467.0], [2162.0, 28049.0], [2146.0, 29524.0], [2178.0, 29216.0], [2202.0, 194.0], [2218.0, 14602.5], [2210.0, 27945.0], [2226.0, 30647.0], [2194.0, 24213.0], [2234.0, 12822.0], [2258.0, 30938.0], [2250.0, 27070.0], [2242.0, 30079.0], [2282.0, 30575.5], [2274.0, 27154.0], [2402.0, 14686.5], [2418.0, 28938.0], [2306.0, 30535.0], [2322.0, 26839.0], [2330.0, 27729.0], [2362.0, 28426.0], [2354.0, 28809.0], [2370.0, 27750.0], [2378.0, 28905.0], [2426.0, 27041.0], [2410.0, 29362.0], [2394.0, 4710.0], [2458.0, 19460.333333333332], [2546.0, 27533.0], [2450.0, 29734.0], [2442.0, 21645.0], [2530.0, 28642.0], [2482.0, 18557.0], [2474.0, 29215.5], [2506.0, 25381.666666666668], [2498.0, 27879.0], [2522.0, 30560.5], [2554.0, 30427.0], [2666.0, 19087.666666666668], [2570.0, 221.0], [2562.0, 28858.0], [2586.0, 13747.0], [2610.0, 27354.0], [2594.0, 27019.0], [2682.0, 30418.0], [2634.0, 27029.0], [2642.0, 29991.0], [2674.0, 27745.5], [2658.0, 28853.5], [2650.0, 30327.5], [2698.0, 30592.0], [2690.0, 12809.0], [2778.0, 31345.0], [2770.0, 31250.0], [2762.0, 27735.0], [2754.0, 31509.0], [2746.0, 20324.666666666668], [2722.0, 23626.0], [2938.0, 272.0], [2882.0, 29606.0], [2914.0, 29913.5], [2834.0, 28916.0], [2826.0, 27651.0], [2818.0, 29523.0], [2850.0, 30907.5], [2906.0, 29385.0], [2898.0, 19219.0], [2946.0, 30338.0], [3058.0, 30950.0], [2970.0, 14585.5], [2962.0, 30690.0], [3002.0, 27749.0], [2994.0, 15086.0], [2986.0, 27431.0], [2978.0, 30500.0], [3026.0, 28453.0], [3010.0, 28531.0], [3042.0, 13643.0], [3066.0, 29222.0], [3034.0, 29987.5], [3082.0, 11053.0], [3170.0, 29782.0], [3186.0, 204.0], [3074.0, 29923.666666666668], [3090.0, 28403.0], [3098.0, 27395.5], [3130.0, 27614.0], [3122.0, 29579.0], [3106.0, 5621.0], [3114.0, 11548.0], [3162.0, 14683.5], [3146.0, 30171.0], [3138.0, 26745.0], [3194.0, 27560.0], [3178.0, 30757.0], [3242.0, 22746.666666666668], [3234.0, 29888.0], [3250.0, 30129.0], [3210.0, 27683.0], [3218.0, 28726.0], [3282.0, 203.0], [3266.0, 26755.0], [3418.0, 245.0], [3442.0, 247.0], [3402.0, 26740.0], [3690.0, 14942.5], [3682.0, 19113.0], [3658.0, 28403.0], [3674.0, 29007.0], [3698.0, 29261.5], [3738.0, 28535.0], [3818.0, 14364.5], [3730.0, 29975.0], [3810.0, 29798.0], [3762.0, 29123.5], [3746.0, 28494.0], [3770.0, 29107.0], [3794.0, 18290.0], [3786.0, 28469.333333333332], [3834.0, 28884.0], [3778.0, 29581.0], [3866.0, 20653.333333333332], [3842.0, 28660.0], [3858.0, 27069.0], [3890.0, 29205.333333333332], [3882.0, 29783.0], [3874.0, 28124.0], [3922.0, 27398.0], [3938.0, 26266.0], [3946.0, 27652.0], [3954.0, 27915.0], [3906.0, 29125.5], [3914.0, 13943.5], [3962.0, 26836.5], [3978.0, 27248.0], [4082.0, 29390.5], [4002.0, 258.0], [4026.0, 256.0], [4018.0, 28311.0], [3970.0, 29227.5], [3986.0, 30878.0], [4034.0, 29784.0], [4042.0, 29965.0], [4090.0, 30450.0], [4066.0, 30427.0], [4074.0, 30153.5], [4116.0, 28949.25], [4132.0, 28020.5], [4212.0, 30301.0], [4324.0, 29406.0], [4228.0, 10947.0], [4372.0, 13476.5], [4516.0, 311.0], [4532.0, 309.0], [4660.0, 28123.0], [4612.0, 284.0], [4852.0, 339.0], [4916.0, 20079.0], [4980.0, 10279.0], [4149.0, 28425.0], [4197.0, 29324.0], [4117.0, 26309.0], [4357.0, 293.0], [4485.0, 311.0], [4629.0, 27747.0], [4981.0, 26373.0], [4965.0, 28279.0], [2147.0, 28984.0], [2171.0, 29548.0], [2163.0, 28857.0], [2155.0, 28072.0], [2059.0, 31676.0], [2067.0, 29789.333333333332], [2107.0, 30227.0], [2099.0, 29586.5], [2091.0, 28278.5], [2195.0, 27303.0], [2275.0, 27739.0], [2299.0, 29532.666666666668], [2179.0, 29018.0], [2203.0, 28676.0], [2235.0, 27034.0], [2227.0, 27749.5], [2219.0, 29785.5], [2211.0, 29443.333333333332], [2251.0, 28697.0], [2291.0, 30282.5], [2267.0, 29523.0], [2259.0, 31183.0], [2315.0, 30159.0], [2363.0, 14517.5], [2355.0, 26856.0], [2307.0, 29498.0], [2379.0, 28300.0], [2387.0, 28652.5], [2395.0, 30580.0], [2427.0, 29625.5], [2419.0, 29993.4], [2411.0, 30623.0], [2403.0, 16007.5], [2459.0, 27472.0], [2523.0, 14192.0], [2547.0, 18703.5], [2539.0, 21161.5], [2451.0, 29366.0], [2443.0, 28675.0], [2435.0, 30055.0], [2491.0, 27615.0], [2515.0, 29048.0], [2507.0, 27496.0], [2571.0, 29110.0], [2587.0, 30705.0], [2595.0, 14379.0], [2603.0, 28910.0], [2611.0, 28914.0], [2635.0, 30622.0], [2627.0, 27431.5], [2667.0, 29478.0], [2579.0, 28647.666666666668], [2563.0, 18995.5], [2619.0, 30306.0], [2651.0, 27053.0], [2787.0, 16234.0], [2731.0, 30530.0], [2723.0, 29880.0], [2747.0, 27447.0], [2779.0, 28463.0], [2771.0, 12676.0], [2763.0, 30171.0], [2755.0, 29993.666666666668], [2811.0, 28743.333333333332], [2803.0, 29349.5], [2795.0, 31400.0], [2931.0, 28848.0], [2851.0, 5030.0], [2859.0, 22070.333333333332], [2883.0, 13734.5], [2899.0, 30035.0], [2939.0, 28808.333333333332], [2923.0, 30153.0], [2875.0, 29194.5], [2843.0, 29408.0], [2835.0, 26723.0], [2827.0, 27970.0], [2867.0, 29642.0], [3059.0, 27461.0], [3067.0, 14244.0], [3011.0, 29500.0], [3019.0, 20069.0], [3027.0, 28796.0], [3051.0, 27752.5], [3043.0, 28839.0], [2971.0, 26790.0], [2963.0, 29924.0], [2955.0, 2657.0], [2947.0, 29627.0], [3003.0, 29287.0], [2995.0, 28577.0], [2987.0, 29759.0], [2979.0, 28605.0], [3035.0, 30756.0], [3195.0, 17611.0], [3075.0, 28606.0], [3115.0, 30269.0], [3107.0, 28900.0], [3091.0, 15731.0], [3139.0, 201.0], [3147.0, 31219.0], [3155.0, 29387.0], [3163.0, 27768.0], [3187.0, 27532.0], [3179.0, 27773.0], [3099.0, 31176.0], [3203.0, 27131.5], [3259.0, 206.0], [3211.0, 15387.0], [3219.0, 26882.0], [3227.0, 28595.0], [3251.0, 19011.5], [3243.0, 31022.0], [3235.0, 30071.0], [3339.0, 220.0], [3363.0, 441.0], [3331.0, 26525.0], [3467.0, 244.0], [3491.0, 245.0], [3507.0, 12508.0], [3603.0, 31133.0], [3651.0, 29517.0], [3643.0, 247.0], [3635.0, 27748.0], [3667.0, 28569.666666666668], [3707.0, 29094.0], [3699.0, 28783.0], [3691.0, 27753.0], [3827.0, 28578.5], [3819.0, 29356.0], [3747.0, 28549.0], [3755.0, 27182.333333333332], [3779.0, 28429.0], [3787.0, 29927.0], [3795.0, 15793.0], [3835.0, 26634.0], [3739.0, 28675.0], [3723.0, 29531.666666666668], [3763.0, 28760.0], [3939.0, 27999.0], [3947.0, 27704.0], [3891.0, 28124.0], [3883.0, 30128.0], [3843.0, 30068.0], [3851.0, 28886.0], [3899.0, 28322.0], [3907.0, 19164.0], [3915.0, 28130.0], [3923.0, 28056.0], [3987.0, 28930.0], [3971.0, 29109.0], [3995.0, 19155.5], [4027.0, 29364.5], [4011.0, 26491.0], [4003.0, 27522.0], [4067.0, 29502.333333333332], [4051.0, 258.0], [4043.0, 26333.0], [4035.0, 28202.0], [4083.0, 27603.0], [4075.0, 29127.0], [4118.0, 28283.0], [4102.0, 30376.333333333332], [4134.0, 29139.0], [4198.0, 28542.0], [4166.0, 29020.0], [4214.0, 27822.0], [4246.0, 30717.0], [4438.0, 2365.0], [4358.0, 29622.0], [4502.0, 27478.0], [4678.0, 286.0], [4710.0, 276.0], [4966.0, 28226.5], [4998.0, 27883.0], [4135.0, 28893.0], [4103.0, 28497.0], [4151.0, 28947.333333333332], [4167.0, 283.0], [4215.0, 30254.0], [4599.0, 285.0], [4647.0, 29664.0], [4759.0, 4736.0], [4871.0, 330.0], [4903.0, 335.0], [4983.0, 27787.0], [517.0, 27945.0], [541.0, 31059.0], [537.0, 29463.0], [535.0, 29614.0], [531.0, 29651.666666666668], [529.0, 29773.0], [525.0, 31521.0], [523.0, 27718.0], [521.0, 29650.0], [515.0, 28825.0], [513.0, 30503.0], [551.0, 30087.0], [563.0, 27293.0], [575.0, 28101.0], [567.0, 28818.0], [559.0, 21991.0], [557.0, 29436.666666666668], [555.0, 28489.0], [553.0, 31025.0], [549.0, 29365.0], [547.0, 29056.25], [607.0, 30064.0], [601.0, 28497.0], [595.0, 14053.0], [593.0, 12223.0], [589.0, 28861.0], [587.0, 27711.0], [585.0, 29202.666666666668], [581.0, 8400.0], [579.0, 30077.333333333332], [637.0, 29334.333333333332], [635.0, 30301.75], [631.0, 28966.0], [629.0, 28048.0], [627.0, 29133.333333333332], [625.0, 29254.0], [623.0, 30164.0], [611.0, 28584.0], [609.0, 31961.0], [667.0, 29801.0], [669.0, 29987.0], [665.0, 31344.0], [645.0, 28274.0], [641.0, 30396.666666666668], [659.0, 30133.0], [657.0, 28882.0], [655.0, 31529.0], [653.0, 27669.0], [651.0, 30005.5], [649.0, 30136.0], [701.0, 31770.5], [703.0, 31503.0], [697.0, 29101.0], [693.0, 29388.0], [689.0, 19666.0], [685.0, 30709.0], [683.0, 28501.0], [681.0, 30053.0], [677.0, 27453.0], [675.0, 30514.4], [729.0, 14231.0], [733.0, 30055.0], [731.0, 27623.0], [727.0, 30293.0], [725.0, 29733.0], [721.0, 31340.0], [719.0, 28112.0], [705.0, 27133.0], [717.0, 31233.0], [715.0, 30331.0], [767.0, 12171.0], [757.0, 31407.0], [755.0, 30602.0], [753.0, 28721.0], [751.0, 30282.5], [737.0, 29587.5], [749.0, 30230.666666666668], [747.0, 27716.0], [743.0, 29033.0], [739.0, 28080.0], [797.0, 10357.0], [799.0, 30057.0], [795.0, 27815.0], [789.0, 27670.0], [787.0, 29183.0], [785.0, 30865.5], [777.0, 31091.0], [775.0, 29451.8], [769.0, 29608.0], [823.0, 30084.0], [817.0, 27323.0], [813.0, 29528.75], [807.0, 30230.5], [803.0, 30140.0], [801.0, 25751.25], [857.0, 21118.0], [859.0, 29355.0], [863.0, 29189.0], [853.0, 8306.0], [895.0, 29847.0], [881.0, 881.0], [893.0, 30607.0], [889.0, 28270.0], [887.0, 28791.5], [885.0, 28123.0], [883.0, 30069.0], [879.0, 27835.0], [867.0, 28196.0], [865.0, 27621.0], [871.0, 30924.0], [869.0, 29762.666666666668], [877.0, 30765.0], [875.0, 30512.0], [873.0, 14183.0], [925.0, 28980.0], [923.0, 18093.0], [899.0, 28473.0], [897.0, 28323.0], [927.0, 27819.5], [915.0, 28801.0], [913.0, 28796.666666666668], [911.0, 28710.0], [909.0, 28289.0], [907.0, 27677.0], [905.0, 28312.0], [957.0, 28841.0], [955.0, 30478.0], [953.0, 30132.0], [947.0, 29374.0], [941.0, 22818.666666666668], [937.0, 30745.0], [935.0, 30187.6], [933.0, 28751.0], [987.0, 27017.0], [965.0, 961.0], [969.0, 49.0], [973.0, 30943.0], [963.0, 31161.0], [971.0, 23633.666666666668], [991.0, 10284.0], [985.0, 1094.0], [967.0, 28508.5], [983.0, 27073.0], [981.0, 13266.666666666668], [979.0, 29725.0], [977.0, 29444.0], [1021.0, 30073.0], [1023.0, 27444.5], [1019.0, 29926.0], [1015.0, 29762.0], [1011.0, 30268.5], [1007.0, 30517.0], [1001.0, 8252.0], [997.0, 29536.0], [993.0, 29738.0], [1082.0, 28353.5], [1078.0, 19975.0], [1086.0, 30375.0], [1074.0, 29112.0], [1070.0, 11562.0], [1066.0, 29672.5], [1062.0, 29612.0], [1058.0, 27989.0], [1050.0, 28252.0], [1038.0, 23982.0], [1026.0, 28863.0], [1042.0, 28604.0], [1146.0, 25196.5], [1106.0, 1102.0], [1126.0, 21279.5], [1138.0, 30611.0], [1130.0, 21092.5], [1122.0, 29513.5], [1118.0, 30903.0], [1110.0, 30498.666666666668], [1102.0, 28200.5], [1166.0, 14309.0], [1210.0, 28176.0], [1206.0, 29337.5], [1202.0, 30295.0], [1198.0, 27932.0], [1174.0, 29149.0], [1158.0, 30345.0], [1258.0, 30645.0], [1250.0, 26977.0], [1242.0, 30869.0], [1270.0, 27631.5], [1274.0, 27741.0], [1218.0, 28408.0], [1306.0, 101.0], [1330.0, 14533.5], [1318.0, 27227.0], [1294.0, 30290.0], [1286.0, 31312.0], [1374.0, 31108.0], [1362.0, 30907.0], [1350.0, 30738.0], [1358.0, 28701.0], [1378.0, 27834.0], [1386.0, 31212.0], [1434.0, 1426.0], [1454.0, 15684.0], [1414.0, 30019.0], [1462.0, 27244.0], [1466.0, 28524.0], [1490.0, 14486.5], [1514.0, 14020.0], [1498.0, 29655.5], [1518.0, 28660.0], [1534.0, 31343.0], [1586.0, 28819.0], [1574.0, 29961.0], [1558.0, 29988.0], [1546.0, 29822.0], [1554.0, 30347.0], [1562.0, 30818.0], [1566.0, 30712.0], [1578.0, 30334.0], [1598.0, 30369.0], [1658.0, 29804.0], [1606.0, 27846.0], [1610.0, 27311.0], [1634.0, 27046.0], [1642.0, 29641.0], [1670.0, 14022.5], [1678.0, 29510.0], [1710.0, 29013.0], [1782.0, 133.0], [1750.0, 28505.0], [1774.0, 30730.0], [1786.0, 29255.0], [1842.0, 137.0], [1818.0, 27823.0], [1806.0, 29922.0], [1850.0, 29261.0], [1794.0, 29470.0], [1798.0, 28288.0], [1814.0, 27858.5], [1878.0, 13989.0], [1874.0, 28926.0], [1858.0, 27301.0], [1890.0, 26978.0], [1894.0, 29148.0], [1918.0, 29036.0], [1862.0, 28142.0], [1942.0, 13628.5], [1982.0, 29691.333333333332], [1974.0, 31506.0], [1970.0, 8028.0], [1966.0, 28195.0], [1958.0, 28149.0], [1922.0, 30019.0], [1994.0, 29163.0], [1986.0, 154.0], [1998.0, 335.5], [2002.0, 27462.0], [2014.0, 29854.0], [2030.0, 29159.0], [2038.0, 29801.5], [2034.0, 31391.0], [2068.0, 2064.0], [2052.0, 16797.5], [2076.0, 30657.0], [2108.0, 28931.0], [2100.0, 29596.0], [2084.0, 27602.666666666668], [2116.0, 5103.5], [2140.0, 20757.333333333332], [2132.0, 28658.5], [2124.0, 18094.75], [2172.0, 29665.0], [2156.0, 28080.0], [2188.0, 22551.75], [2252.0, 30834.333333333332], [2220.0, 11811.0], [2212.0, 27432.0], [2228.0, 30567.0], [2300.0, 28726.0], [2244.0, 29466.0], [2284.0, 29660.0], [2268.0, 30354.333333333332], [2324.0, 19240.666666666668], [2420.0, 30009.0], [2348.0, 145.0], [2340.0, 27505.0], [2364.0, 29042.0], [2308.0, 28215.0], [2316.0, 30102.0], [2388.0, 149.0], [2372.0, 22672.666666666668], [2396.0, 29410.0], [2428.0, 673.0], [2404.0, 26920.0], [2532.0, 1221.0], [2548.0, 14191.5], [2556.0, 29653.5], [2540.0, 29036.0], [2452.0, 28518.0], [2444.0, 29982.0], [2436.0, 31072.0], [2484.0, 20589.0], [2476.0, 27664.5], [2468.0, 29467.666666666668], [2524.0, 31027.0], [2516.0, 30510.0], [2508.0, 29124.0], [2500.0, 14969.5], [2660.0, 29560.0], [2676.0, 27815.0], [2620.0, 218.0], [2604.0, 29460.0], [2596.0, 26949.0], [2612.0, 26992.0], [2684.0, 31506.0], [2644.0, 28041.0], [2588.0, 30805.0], [2572.0, 31546.0], [2564.0, 28627.0], [2652.0, 28990.0], [2700.0, 26947.0], [2708.0, 30409.0], [2812.0, 26879.0], [2780.0, 27657.0], [2764.0, 29694.5], [2692.0, 29500.5], [2740.0, 27901.0], [2732.0, 27675.0], [2724.0, 27079.0], [2924.0, 28356.0], [2820.0, 29775.0], [2868.0, 30057.0], [2940.0, 29750.0], [2884.0, 30435.0], [2892.0, 28246.0], [2916.0, 29934.5], [2844.0, 30131.0], [2836.0, 29169.0], [2908.0, 26624.0], [3060.0, 29403.0], [2996.0, 245.0], [2988.0, 30702.0], [2980.0, 31000.0], [2956.0, 29843.333333333332], [3020.0, 235.0], [3012.0, 29218.0], [3036.0, 27054.0], [3068.0, 26716.0], [3052.0, 27368.0], [3044.0, 27066.0], [2972.0, 28145.0], [3084.0, 30191.666666666668], [3172.0, 20493.5], [3108.0, 31130.0], [3132.0, 28224.666666666668], [3076.0, 27195.0], [3100.0, 31030.0], [3196.0, 29945.0], [3140.0, 28925.6], [3188.0, 28524.0], [3180.0, 26693.0], [3156.0, 29028.0], [3212.0, 27126.0], [3236.0, 14808.0], [3244.0, 29272.0], [3220.0, 28726.0], [3268.0, 29412.0], [3284.0, 29650.0], [3396.0, 246.0], [3444.0, 30189.0], [3580.0, 225.0], [3468.0, 26657.0], [3700.0, 29178.0], [3668.0, 30887.0], [3652.0, 26697.544502617813], [3692.0, 26929.0], [3708.0, 26828.0], [3732.0, 18988.333333333332], [3836.0, 29303.0], [3724.0, 27940.0], [3812.0, 28706.5], [3764.0, 27430.0], [3780.0, 253.0], [3788.0, 28276.0], [3804.0, 21508.0], [3828.0, 14770.5], [3852.0, 27200.0], [3956.0, 20090.5], [3964.0, 13328.666666666668], [3844.0, 891.0], [3860.0, 27783.0], [3900.0, 4016.0], [3892.0, 26098.0], [3876.0, 29249.5], [3924.0, 28213.0], [3932.0, 27724.0], [3940.0, 14543.0], [3868.0, 28515.5], [3916.0, 26017.0], [3972.0, 28348.0], [4004.0, 27820.0], [4012.0, 28224.333333333332], [4020.0, 26332.0], [3980.0, 6697.0], [4028.0, 26593.0], [4036.0, 28483.0], [4044.0, 28699.0], [4052.0, 29781.333333333332], [4092.0, 27151.0], [4068.0, 28854.0], [4076.0, 26774.0], [4120.0, 28021.0], [4216.0, 684.0], [4312.0, 316.0], [4152.0, 28286.0], [4136.0, 26435.0], [4104.0, 29243.333333333332], [4200.0, 10444.0], [4232.0, 28968.25], [4568.0, 284.0], [4824.0, 336.0], [4648.0, 29964.0], [4696.0, 27541.0], [4888.0, 334.0], [4968.0, 28624.5], [5000.0, 2841.9274750575637], [4984.0, 29957.0], [4137.0, 29045.0], [4153.0, 14271.5], [4169.0, 21344.5], [4185.0, 17972.333333333336], [4201.0, 30556.0], [4121.0, 26034.0], [4233.0, 26607.0], [4393.0, 299.0], [4473.0, 29363.0], [4537.0, 26590.0], [4665.0, 288.0], [4825.0, 30642.0], [4761.0, 305.0], [4985.0, 27521.0], [2069.0, 175.0], [2173.0, 28950.0], [2109.0, 12853.0], [2061.0, 28543.0], [2093.0, 29830.5], [2165.0, 20596.0], [2133.0, 29109.0], [2125.0, 28501.0], [2205.0, 29772.666666666668], [2285.0, 15353.5], [2237.0, 2224.0], [2229.0, 1273.0], [2221.0, 29193.0], [2189.0, 27041.0], [2245.0, 29979.0], [2253.0, 29594.0], [2269.0, 27891.0], [2261.0, 28817.0], [2293.0, 29369.0], [2277.0, 21568.0], [2413.0, 27616.5], [2381.0, 28651.0], [2405.0, 27917.0], [2333.0, 29433.0], [2389.0, 27971.0], [2365.0, 27928.0], [2357.0, 28622.0], [2349.0, 29270.2], [2453.0, 6486.0], [2549.0, 29112.0], [2445.0, 2430.0], [2437.0, 27810.0], [2493.0, 27704.0], [2461.0, 27983.0], [2525.0, 27620.0], [2517.0, 27487.0], [2509.0, 27800.0], [2581.0, 14900.0], [2637.0, 30280.5], [2621.0, 27967.0], [2565.0, 30446.0], [2573.0, 27832.0], [2597.0, 29050.0], [2645.0, 19886.666666666668], [2661.0, 27583.0], [2629.0, 30024.0], [2701.0, 14930.5], [2805.0, 29413.0], [2741.0, 26962.0], [2693.0, 14178.0], [2725.0, 26751.0], [2765.0, 15748.5], [2789.0, 28003.5], [2717.0, 29289.0], [2709.0, 28877.75], [2757.0, 15637.0], [2821.0, 27525.0], [2917.0, 459.0], [2941.0, 27447.0], [2901.0, 19821.666666666668], [2877.0, 28217.5], [2845.0, 28674.0], [2869.0, 27785.0], [2861.0, 30241.0], [2853.0, 29601.5], [2933.0, 27047.0], [2925.0, 30096.0], [2893.0, 30122.0], [2973.0, 27500.0], [3053.0, 23348.0], [3005.0, 19993.0], [2949.0, 19374.0], [2965.0, 17458.0], [2981.0, 247.0], [2989.0, 28746.0], [3013.0, 27472.0], [3021.0, 21832.5], [3029.0, 27702.0], [3061.0, 26843.0], [3045.0, 27067.0], [3093.0, 27725.5], [3173.0, 27238.0], [3189.0, 13567.0], [3197.0, 30729.0], [3141.0, 26723.0], [3085.0, 26624.0], [3077.0, 29586.0], [3133.0, 12560.0], [3125.0, 28848.666666666668], [3117.0, 28998.5], [3109.0, 28947.0], [3149.0, 28427.0], [3221.0, 30101.0], [3229.0, 26975.0], [3301.0, 13546.0], [3277.0, 26931.0], [3205.0, 27363.0], [3349.0, 28451.0], [3517.0, 245.0], [3541.0, 248.0], [3565.0, 29533.0], [3661.0, 20912.5], [3709.0, 30553.0], [3701.0, 27376.0], [3693.0, 30751.0], [3741.0, 18791.5], [3813.0, 30670.0], [3749.0, 28800.0], [3757.0, 14135.666666666666], [3829.0, 29954.0], [3821.0, 29134.0], [3733.0, 28752.0], [3725.0, 27812.0], [3717.0, 27252.0], [3853.0, 13254.5], [3869.0, 15550.0], [3893.0, 262.0], [3885.0, 29571.5], [3877.0, 27570.0], [3901.0, 28821.5], [3845.0, 27888.5], [3909.0, 29227.5], [3917.0, 27124.0], [3925.0, 27255.0], [3933.0, 29470.333333333332], [3949.0, 27250.5], [3997.0, 29728.0], [3981.0, 27313.0], [3973.0, 28805.0], [3989.0, 28451.0], [4021.0, 11034.0], [4005.0, 27371.0], [4037.0, 29946.0], [4061.0, 29118.0], [4085.0, 29985.0], [4077.0, 28942.0], [4138.0, 28825.8], [4106.0, 30366.5], [4298.0, 30177.0], [4202.0, 28373.0], [4186.0, 27496.0], [4170.0, 30392.0], [4218.0, 29303.0], [4586.0, 283.0], [4634.0, 30189.0], [4746.0, 28611.0], [4970.0, 26271.0], [4139.0, 14451.5], [4155.0, 18932.0], [4123.0, 10490.0], [4107.0, 30238.0], [4299.0, 316.0], [4347.0, 316.0], [4315.0, 28573.0], [4171.0, 28597.0], [4203.0, 29691.0], [4187.0, 27445.666666666668], [4219.0, 29323.0], [4555.0, 27202.0], [4427.0, 4420.0], [4491.0, 28948.0], [4651.0, 286.0], [4699.0, 27762.0], [4971.0, 27264.5], [4987.0, 20245.0], [1035.0, 551.0], [1087.0, 24108.0], [1059.0, 30166.0], [1055.0, 25518.6], [1039.0, 29953.5], [1031.0, 31114.0], [1027.0, 28205.0], [1139.0, 27480.0], [1091.0, 56.0], [1095.0, 29958.0], [1103.0, 27387.0], [1099.0, 29884.666666666668], [1151.0, 60.0], [1147.0, 28689.0], [1143.0, 30117.0], [1131.0, 29750.5], [1119.0, 29772.0], [1115.0, 13080.0], [1107.0, 29075.0], [1211.0, 11523.0], [1215.0, 30217.5], [1203.0, 27388.0], [1167.0, 28658.5], [1163.0, 30748.666666666668], [1159.0, 27603.0], [1155.0, 31812.0], [1199.0, 30302.0], [1195.0, 29154.5], [1191.0, 29388.0], [1187.0, 29007.0], [1183.0, 28928.0], [1179.0, 31027.0], [1171.0, 31166.0], [1231.0, 80.0], [1239.0, 31503.0], [1235.0, 30858.0], [1275.0, 27308.0], [1279.0, 211.0], [1291.0, 111.0], [1315.0, 100.0], [1319.0, 30836.0], [1311.0, 30459.0], [1335.0, 29632.0], [1299.0, 31635.0], [1363.0, 58.0], [1403.0, 14931.0], [1347.0, 30541.0], [1391.0, 30027.0], [1415.0, 23589.2], [1439.0, 14861.5], [1455.0, 28561.0], [1423.0, 27414.0], [1535.0, 131.0], [1523.0, 27151.0], [1515.0, 27330.0], [1491.0, 11977.0], [1483.0, 29057.0], [1495.0, 28880.0], [1519.0, 31539.0], [1539.0, 31792.0], [1583.0, 20923.5], [1587.0, 28952.0], [1591.0, 30199.0], [1659.0, 137.0], [1639.0, 30973.0], [1611.0, 30070.0], [1619.0, 28348.0], [1623.0, 30943.0], [1695.0, 138.0], [1707.0, 138.0], [1715.0, 30478.5], [1691.0, 29364.5], [1671.0, 27435.0], [1679.0, 31134.0], [1699.0, 29460.0], [1731.0, 135.0], [1747.0, 1737.0], [1775.0, 30575.5], [1743.0, 29421.0], [1763.0, 28839.0], [1803.0, 134.0], [1819.0, 136.0], [1855.0, 6549.0], [1839.0, 29829.0], [1807.0, 31718.0], [1831.0, 27873.0], [1915.0, 152.0], [1871.0, 30067.0], [1879.0, 30593.5], [1983.0, 28103.0], [1951.0, 30952.0], [1955.0, 27229.0], [2043.0, 26847.5], [2047.0, 146.0], [2023.0, 17712.5], [2019.0, 28088.0], [2039.0, 30844.0], [2015.0, 29786.0], [1991.0, 29850.0], [1987.0, 31390.0], [2007.0, 27955.0], [2003.0, 21624.5], [2027.0, 20130.5], [2054.0, 28680.0], [2166.0, 179.0], [2102.0, 13865.0], [2070.0, 31306.0], [2086.0, 16016.0], [2118.0, 30117.0], [2158.0, 28541.0], [2150.0, 28710.0], [2142.0, 30380.0], [2134.0, 29984.0], [2182.0, 28512.0], [2286.0, 27750.0], [2214.0, 29526.0], [2230.0, 26810.0], [2238.0, 28266.0], [2198.0, 29425.333333333332], [2262.0, 10363.25], [2254.0, 11294.0], [2246.0, 28998.0], [2270.0, 30729.0], [2302.0, 30393.5], [2294.0, 28749.5], [2278.0, 30530.0], [2206.0, 29871.0], [2318.0, 4725.0], [2310.0, 20938.75], [2326.0, 29555.0], [2334.0, 29360.0], [2366.0, 26700.0], [2358.0, 30502.0], [2350.0, 28897.0], [2342.0, 25777.0], [2430.0, 27672.5], [2374.0, 30017.0], [2390.0, 29299.0], [2382.0, 27315.0], [2422.0, 30115.0], [2406.0, 27305.0], [2398.0, 29863.0], [2454.0, 27018.0], [2438.0, 28909.5], [2462.0, 28784.5], [2478.0, 28551.0], [2470.0, 27224.0], [2486.0, 29566.0], [2494.0, 13963.5], [2510.0, 236.0], [2502.0, 27117.5], [2558.0, 13642.5], [2542.0, 29844.0], [2534.0, 26799.0], [2590.0, 30895.0], [2678.0, 25228.0], [2582.0, 29631.5], [2622.0, 28958.0], [2614.0, 29158.5], [2606.0, 29677.0], [2598.0, 27460.0], [2630.0, 30788.0], [2646.0, 30395.0], [2670.0, 29139.0], [2662.0, 13730.0], [2654.0, 29315.0], [2798.0, 18266.5], [2718.0, 28247.333333333332], [2702.0, 27794.0], [2750.0, 28694.333333333332], [2742.0, 31064.0], [2726.0, 27355.0], [2926.0, 29416.0], [2894.0, 26793.0], [2942.0, 27484.0], [2886.0, 30487.0], [2934.0, 29411.0], [2846.0, 29196.0], [2838.0, 28788.5], [2830.0, 30861.5], [2822.0, 26813.0], [2878.0, 27084.0], [2870.0, 14774.5], [2862.0, 28517.0], [2910.0, 28270.666666666668], [3070.0, 27623.5], [2974.0, 29922.0], [2998.0, 28041.0], [2990.0, 30227.0], [2982.0, 29992.5], [3030.0, 15464.0], [3022.0, 30879.0], [3014.0, 27751.0], [3054.0, 14922.0], [3046.0, 28189.0], [3038.0, 30532.5], [3086.0, 27393.0], [3118.0, 3099.0], [3174.0, 202.0], [3134.0, 27550.0], [3078.0, 30589.0], [3102.0, 30576.0], [3126.0, 31209.0], [3158.0, 30349.0], [3150.0, 28202.0], [3166.0, 30752.0], [3198.0, 15297.5], [3190.0, 26676.0], [3182.0, 19962.666666666668], [3246.0, 28441.5], [3238.0, 29486.0], [3206.0, 28075.0], [3214.0, 30671.0], [3270.0, 14885.0], [3294.0, 203.0], [3230.0, 14868.0], [3430.0, 244.0], [3454.0, 245.0], [3558.0, 221.0], [3478.0, 243.0], [3526.0, 28356.0], [3686.0, 28746.333333333332], [3622.0, 30463.0], [3670.0, 19914.666666666668], [3678.0, 28051.5], [3694.0, 27037.0], [3734.0, 29834.0], [3814.0, 29601.0], [3766.0, 15809.5], [3758.0, 29246.0], [3750.0, 29997.5], [3774.0, 28745.25], [3718.0, 28623.5], [3790.0, 27681.5], [3782.0, 29278.333333333332], [3798.0, 27348.0], [3806.0, 30693.0], [3838.0, 13731.0], [3870.0, 26381.0], [3862.0, 27607.5], [3846.0, 14700.5], [3902.0, 26484.0], [3894.0, 27262.0], [3886.0, 26387.0], [3918.0, 256.0], [3926.0, 26525.0], [3934.0, 27935.0], [3950.0, 28528.0], [3958.0, 20364.0], [3966.0, 28143.5], [3910.0, 28067.0], [3974.0, 27377.0], [4006.0, 28826.0], [4014.0, 28065.0], [4030.0, 18964.0], [3982.0, 28752.0], [3990.0, 28587.0], [4038.0, 14851.5], [4046.0, 28235.5], [4054.0, 29772.5], [4070.0, 29779.666666666668], [4086.0, 28545.0], [4156.0, 30166.0], [4140.0, 30157.75], [4108.0, 20792.0], [4188.0, 294.0], [4204.0, 27926.0], [4332.0, 315.0], [4524.0, 26423.0], [4700.0, 266.0], [4860.0, 14896.5], [4972.0, 27385.0], [4988.0, 27715.0], [4125.0, 15337.0], [4157.0, 27318.0], [4141.0, 29251.0], [4173.0, 27976.5], [4189.0, 26224.0], [4221.0, 28620.0], [4429.0, 29569.0], [4701.0, 30222.0], [4733.0, 11939.0], [4765.0, 27882.0], [4989.0, 26544.0], [4973.0, 344.0], [4957.0, 26477.967647058806], [2167.0, 29659.0], [2175.0, 29009.0], [2111.0, 31367.0], [2055.0, 27682.0], [2063.0, 30264.0], [2079.0, 21325.5], [2071.0, 28447.666666666668], [2087.0, 30862.0], [2143.0, 28482.5], [2127.0, 27969.0], [2119.0, 31253.0], [2199.0, 30741.0], [2239.0, 14238.5], [2183.0, 28307.333333333332], [2191.0, 29066.0], [2223.0, 28530.0], [2215.0, 29731.0], [2303.0, 29572.0], [2255.0, 27743.0], [2295.0, 28452.0], [2279.0, 27331.0], [2335.0, 159.0], [2423.0, 30892.0], [2359.0, 29028.0], [2367.0, 28913.0], [2311.0, 30570.0], [2327.0, 30712.0], [2319.0, 28322.0], [2375.0, 149.0], [2383.0, 28981.0], [2399.0, 28703.0], [2431.0, 30377.0], [2535.0, 29003.0], [2559.0, 29956.0], [2551.0, 27800.5], [2543.0, 28996.0], [2455.0, 26679.0], [2447.0, 29426.0], [2487.0, 31513.0], [2471.0, 27355.0], [2527.0, 28744.0], [2511.0, 29377.5], [2663.0, 30122.0], [2679.0, 28714.0], [2599.0, 28693.0], [2607.0, 31012.0], [2615.0, 27678.0], [2631.0, 177.0], [2647.0, 13483.5], [2687.0, 27888.75], [2671.0, 28733.0], [2583.0, 31034.0], [2575.0, 29774.0], [2567.0, 28768.0], [2655.0, 28616.0], [2719.0, 19627.666666666668], [2807.0, 30792.0], [2703.0, 29886.5], [2695.0, 573.0], [2791.0, 27606.0], [2735.0, 14722.5], [2751.0, 6955.0], [2783.0, 19720.333333333332], [2775.0, 30720.0], [2767.0, 28568.0], [2759.0, 28076.5], [2815.0, 27620.0], [2935.0, 28970.5], [2855.0, 28183.0], [2863.0, 232.0], [2903.0, 19048.666666666668], [2895.0, 28780.5], [2887.0, 31014.0], [2927.0, 30126.0], [2919.0, 28804.666666666668], [2839.0, 30270.0], [2831.0, 30281.0], [3047.0, 27796.0], [3071.0, 26811.0], [3015.0, 28310.0], [3031.0, 29011.5], [3055.0, 27334.0], [2975.0, 27509.0], [2967.0, 26799.0], [2959.0, 28408.0], [2951.0, 29152.0], [3007.0, 28703.0], [2999.0, 28811.0], [2991.0, 27428.0], [3039.0, 26966.0], [3183.0, 30764.0], [3079.0, 14623.5], [3087.0, 28774.0], [3119.0, 26593.5], [3111.0, 18415.0], [3151.0, 18983.333333333332], [3143.0, 29734.5], [3167.0, 28625.0], [3199.0, 29646.0], [3095.0, 30491.5], [3247.0, 205.0], [3207.0, 8685.0], [3215.0, 28305.0], [3223.0, 27567.0], [3239.0, 28725.0], [3335.0, 231.0], [3407.0, 245.0], [3447.0, 26572.0], [3567.0, 227.0], [3495.0, 29437.0], [3655.0, 27872.666666666668], [3663.0, 30464.5], [3671.0, 26384.0], [3695.0, 27533.0], [3687.0, 2417.0], [3831.0, 26562.5], [3751.0, 30491.0], [3839.0, 26079.0], [3783.0, 26111.0], [3791.0, 29136.0], [3799.0, 30585.0], [3807.0, 30000.5], [3815.0, 26500.0], [3735.0, 29545.0], [3727.0, 30859.0], [3719.0, 25937.2], [3759.0, 26631.0], [3863.0, 28692.0], [3959.0, 26134.0], [3855.0, 27526.0], [3887.0, 27956.0], [3879.0, 28026.0], [3895.0, 28803.0], [3919.0, 28846.5], [3935.0, 30617.0], [3951.0, 3483.0], [3991.0, 30238.0], [3975.0, 28004.0], [4079.0, 27370.5], [3999.0, 19227.0], [4023.0, 29797.0], [4007.0, 29273.0], [4039.0, 26543.0], [4055.0, 30106.0], [4071.0, 28450.0], [4110.0, 18205.333333333332], [4222.0, 25926.0], [4158.0, 15297.5], [4142.0, 29852.0], [4190.0, 28901.0], [4174.0, 27878.0], [4206.0, 26893.0], [4270.0, 329.0], [4318.0, 28091.0], [4334.0, 28264.0], [4382.0, 303.0], [4974.0, 28075.0], [4111.0, 26065.0], [4223.0, 27373.0], [4143.0, 26073.0], [4159.0, 30615.0], [4319.0, 26966.0], [4175.0, 28291.0], [4207.0, 29939.0], [4287.0, 317.0], [4495.0, 27425.0], [4607.0, 26876.0], [4847.0, 26329.0], [4735.0, 281.0], [4959.0, 22012.5], [4975.0, 27686.0], [4927.0, 28988.0], [4991.0, 29365.0]], "isOverall": false, "label": "HTTP Request characters", "isController": false}, {"data": [[3408.418607579024, 18287.959964748774]], "isOverall": false, "label": "HTTP Request characters-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 812.7, "minX": 1.75927146E12, "maxY": 3.3140899333333332E7, "series": [{"data": [[1.75927152E12, 3.3140899333333332E7], [1.75927146E12, 5616298.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.75927152E12, 4760.7], [1.75927146E12, 812.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927152E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 395.3875968992247, "minX": 1.75927146E12, "maxY": 19204.374139756528, "series": [{"data": [[1.75927152E12, 19204.374139756528], [1.75927146E12, 395.3875968992247]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927152E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 273.5555849655906, "minX": 1.75927146E12, "maxY": 374.6614987080104, "series": [{"data": [[1.75927152E12, 273.5555849655906], [1.75927146E12, 374.6614987080104]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927152E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.06718346253229968, "minX": 1.75927146E12, "maxY": 0.446267866596083, "series": [{"data": [[1.75927152E12, 0.446267866596083], [1.75927146E12, 0.06718346253229968]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927152E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 28.0, "minX": 1.75927146E12, "maxY": 60.0, "series": [{"data": [[1.75927146E12, 60.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.75927146E12, 28.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.75927146E12, 60.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.75927146E12, 60.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.75927146E12, 56.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.75927146E12, 60.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927146E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 56.0, "minX": 67.0, "maxY": 29374.0, "series": [{"data": [[69.0, 56.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[857.0, 27686.0], [67.0, 534.0], [69.0, 134.5], [70.0, 486.5], [72.0, 186.0], [74.0, 288.0], [79.0, 245.0], [81.0, 484.0], [83.0, 649.0], [86.0, 485.0], [85.0, 450.0], [84.0, 521.5], [87.0, 670.0], [89.0, 367.0], [88.0, 532.0], [1413.0, 29374.0], [93.0, 256.0], [92.0, 502.0], [95.0, 758.0], [97.0, 612.0], [101.0, 805.0], [105.0, 599.0], [104.0, 820.0], [114.0, 562.0], [121.0, 605.0], [124.0, 608.0], [144.0, 604.0], [157.0, 608.0], [2852.0, 28796.5], [189.0, 15379.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2852.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 67.0, "maxY": 775.0, "series": [{"data": [[69.0, 49.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[857.0, 0.0], [67.0, 522.0], [69.0, 127.5], [70.0, 471.5], [72.0, 176.0], [74.0, 280.5], [79.0, 239.0], [81.0, 475.0], [83.0, 642.0], [86.0, 479.5], [85.0, 438.0], [84.0, 514.0], [87.0, 665.0], [89.0, 360.0], [88.0, 495.5], [1413.0, 0.0], [93.0, 251.0], [92.0, 497.0], [95.0, 749.0], [97.0, 604.0], [101.0, 775.0], [105.0, 594.0], [104.0, 757.0], [114.0, 555.5], [121.0, 576.0], [124.0, 597.5], [144.0, 552.5], [157.0, 524.0], [2852.0, 0.0], [189.0, 528.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2852.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 42.6, "minX": 1.75927146E12, "maxY": 89.78333333333333, "series": [{"data": [[1.75927152E12, 42.6], [1.75927146E12, 89.78333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927152E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 4.85, "minX": 1.75927146E12, "maxY": 83.3, "series": [{"data": [[1.75927152E12, 37.78333333333333], [1.75927146E12, 6.45]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.75927152E12, 4.85]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.75927152E12, 83.3]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927152E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.75927146E12, "maxY": 125.93333333333334, "series": [{"data": [[1.75927152E12, 125.93333333333334], [1.75927146E12, 6.266666666666667]], "isOverall": false, "label": "HTTP Request characters-failure", "isController": false}, {"data": [[1.75927146E12, 0.18333333333333332]], "isOverall": false, "label": "HTTP Request characters-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927152E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.75927146E12, "maxY": 125.93333333333334, "series": [{"data": [[1.75927146E12, 0.18333333333333332]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.75927152E12, 125.93333333333334], [1.75927146E12, 6.266666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927152E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

