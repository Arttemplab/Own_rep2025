/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8162.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 5.0], [9.1, 5.0], [9.2, 5.0], [9.3, 5.0], [9.4, 5.0], [9.5, 5.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 6.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 9.0], [11.0, 10.0], [11.1, 10.0], [11.2, 11.0], [11.3, 12.0], [11.4, 12.0], [11.5, 13.0], [11.6, 14.0], [11.7, 15.0], [11.8, 16.0], [11.9, 16.0], [12.0, 17.0], [12.1, 18.0], [12.2, 19.0], [12.3, 19.0], [12.4, 20.0], [12.5, 20.0], [12.6, 20.0], [12.7, 21.0], [12.8, 22.0], [12.9, 23.0], [13.0, 24.0], [13.1, 24.0], [13.2, 25.0], [13.3, 26.0], [13.4, 27.0], [13.5, 28.0], [13.6, 29.0], [13.7, 30.0], [13.8, 30.0], [13.9, 31.0], [14.0, 32.0], [14.1, 33.0], [14.2, 34.0], [14.3, 35.0], [14.4, 38.0], [14.5, 41.0], [14.6, 42.0], [14.7, 43.0], [14.8, 45.0], [14.9, 45.0], [15.0, 46.0], [15.1, 46.0], [15.2, 47.0], [15.3, 47.0], [15.4, 49.0], [15.5, 50.0], [15.6, 52.0], [15.7, 54.0], [15.8, 55.0], [15.9, 57.0], [16.0, 59.0], [16.1, 63.0], [16.2, 71.0], [16.3, 76.0], [16.4, 83.0], [16.5, 87.0], [16.6, 89.0], [16.7, 90.0], [16.8, 94.0], [16.9, 96.0], [17.0, 97.0], [17.1, 98.0], [17.2, 99.0], [17.3, 100.0], [17.4, 101.0], [17.5, 102.0], [17.6, 102.0], [17.7, 103.0], [17.8, 103.0], [17.9, 104.0], [18.0, 104.0], [18.1, 105.0], [18.2, 105.0], [18.3, 106.0], [18.4, 107.0], [18.5, 107.0], [18.6, 108.0], [18.7, 108.0], [18.8, 109.0], [18.9, 110.0], [19.0, 112.0], [19.1, 114.0], [19.2, 115.0], [19.3, 116.0], [19.4, 117.0], [19.5, 119.0], [19.6, 120.0], [19.7, 121.0], [19.8, 122.0], [19.9, 123.0], [20.0, 124.0], [20.1, 125.0], [20.2, 126.0], [20.3, 128.0], [20.4, 130.0], [20.5, 131.0], [20.6, 134.0], [20.7, 136.0], [20.8, 139.0], [20.9, 142.0], [21.0, 148.0], [21.1, 152.0], [21.2, 156.0], [21.3, 164.0], [21.4, 171.0], [21.5, 179.0], [21.6, 183.0], [21.7, 189.0], [21.8, 199.0], [21.9, 204.0], [22.0, 217.0], [22.1, 224.0], [22.2, 231.0], [22.3, 241.0], [22.4, 252.0], [22.5, 267.0], [22.6, 275.0], [22.7, 287.0], [22.8, 293.0], [22.9, 297.0], [23.0, 315.0], [23.1, 323.0], [23.2, 331.0], [23.3, 337.0], [23.4, 345.0], [23.5, 352.0], [23.6, 359.0], [23.7, 366.0], [23.8, 371.0], [23.9, 383.0], [24.0, 389.0], [24.1, 395.0], [24.2, 402.0], [24.3, 410.0], [24.4, 416.0], [24.5, 422.0], [24.6, 427.0], [24.7, 437.0], [24.8, 443.0], [24.9, 449.0], [25.0, 451.0], [25.1, 458.0], [25.2, 464.0], [25.3, 468.0], [25.4, 476.0], [25.5, 484.0], [25.6, 494.0], [25.7, 508.0], [25.8, 519.0], [25.9, 529.0], [26.0, 534.0], [26.1, 544.0], [26.2, 546.0], [26.3, 558.0], [26.4, 570.0], [26.5, 575.0], [26.6, 586.0], [26.7, 595.0], [26.8, 604.0], [26.9, 616.0], [27.0, 624.0], [27.1, 631.0], [27.2, 639.0], [27.3, 644.0], [27.4, 650.0], [27.5, 658.0], [27.6, 670.0], [27.7, 678.0], [27.8, 694.0], [27.9, 706.0], [28.0, 715.0], [28.1, 722.0], [28.2, 732.0], [28.3, 748.0], [28.4, 756.0], [28.5, 769.0], [28.6, 774.0], [28.7, 783.0], [28.8, 784.0], [28.9, 785.0], [29.0, 786.0], [29.1, 791.0], [29.2, 799.0], [29.3, 804.0], [29.4, 811.0], [29.5, 823.0], [29.6, 830.0], [29.7, 834.0], [29.8, 844.0], [29.9, 850.0], [30.0, 861.0], [30.1, 867.0], [30.2, 878.0], [30.3, 884.0], [30.4, 891.0], [30.5, 897.0], [30.6, 906.0], [30.7, 914.0], [30.8, 924.0], [30.9, 930.0], [31.0, 936.0], [31.1, 940.0], [31.2, 951.0], [31.3, 958.0], [31.4, 963.0], [31.5, 968.0], [31.6, 973.0], [31.7, 982.0], [31.8, 986.0], [31.9, 992.0], [32.0, 1002.0], [32.1, 1014.0], [32.2, 1019.0], [32.3, 1029.0], [32.4, 1035.0], [32.5, 1041.0], [32.6, 1047.0], [32.7, 1053.0], [32.8, 1058.0], [32.9, 1062.0], [33.0, 1078.0], [33.1, 1083.0], [33.2, 1088.0], [33.3, 1095.0], [33.4, 1103.0], [33.5, 1109.0], [33.6, 1122.0], [33.7, 1127.0], [33.8, 1135.0], [33.9, 1143.0], [34.0, 1149.0], [34.1, 1157.0], [34.2, 1164.0], [34.3, 1174.0], [34.4, 1183.0], [34.5, 1190.0], [34.6, 1209.0], [34.7, 1214.0], [34.8, 1223.0], [34.9, 1230.0], [35.0, 1242.0], [35.1, 1249.0], [35.2, 1255.0], [35.3, 1260.0], [35.4, 1269.0], [35.5, 1273.0], [35.6, 1289.0], [35.7, 1293.0], [35.8, 1297.0], [35.9, 1306.0], [36.0, 1316.0], [36.1, 1323.0], [36.2, 1335.0], [36.3, 1344.0], [36.4, 1351.0], [36.5, 1362.0], [36.6, 1370.0], [36.7, 1380.0], [36.8, 1385.0], [36.9, 1391.0], [37.0, 1395.0], [37.1, 1402.0], [37.2, 1413.0], [37.3, 1421.0], [37.4, 1432.0], [37.5, 1441.0], [37.6, 1446.0], [37.7, 1453.0], [37.8, 1459.0], [37.9, 1465.0], [38.0, 1477.0], [38.1, 1484.0], [38.2, 1503.0], [38.3, 1510.0], [38.4, 1517.0], [38.5, 1520.0], [38.6, 1530.0], [38.7, 1539.0], [38.8, 1547.0], [38.9, 1551.0], [39.0, 1559.0], [39.1, 1568.0], [39.2, 1575.0], [39.3, 1581.0], [39.4, 1591.0], [39.5, 1599.0], [39.6, 1607.0], [39.7, 1618.0], [39.8, 1625.0], [39.9, 1630.0], [40.0, 1636.0], [40.1, 1643.0], [40.2, 1653.0], [40.3, 1659.0], [40.4, 1676.0], [40.5, 1683.0], [40.6, 1693.0], [40.7, 1703.0], [40.8, 1705.0], [40.9, 1715.0], [41.0, 1719.0], [41.1, 1729.0], [41.2, 1739.0], [41.3, 1743.0], [41.4, 1748.0], [41.5, 1756.0], [41.6, 1772.0], [41.7, 1776.0], [41.8, 1785.0], [41.9, 1790.0], [42.0, 1799.0], [42.1, 1807.0], [42.2, 1815.0], [42.3, 1826.0], [42.4, 1830.0], [42.5, 1840.0], [42.6, 1847.0], [42.7, 1856.0], [42.8, 1864.0], [42.9, 1868.0], [43.0, 1876.0], [43.1, 1878.0], [43.2, 1886.0], [43.3, 1896.0], [43.4, 1908.0], [43.5, 1917.0], [43.6, 1926.0], [43.7, 1936.0], [43.8, 1944.0], [43.9, 1961.0], [44.0, 1966.0], [44.1, 1975.0], [44.2, 1978.0], [44.3, 1981.0], [44.4, 1992.0], [44.5, 2002.0], [44.6, 2011.0], [44.7, 2019.0], [44.8, 2032.0], [44.9, 2039.0], [45.0, 2049.0], [45.1, 2053.0], [45.2, 2057.0], [45.3, 2062.0], [45.4, 2071.0], [45.5, 2084.0], [45.6, 2089.0], [45.7, 2102.0], [45.8, 2120.0], [45.9, 2124.0], [46.0, 2128.0], [46.1, 2133.0], [46.2, 2142.0], [46.3, 2148.0], [46.4, 2153.0], [46.5, 2159.0], [46.6, 2167.0], [46.7, 2174.0], [46.8, 2181.0], [46.9, 2189.0], [47.0, 2199.0], [47.1, 2205.0], [47.2, 2215.0], [47.3, 2219.0], [47.4, 2227.0], [47.5, 2235.0], [47.6, 2246.0], [47.7, 2249.0], [47.8, 2256.0], [47.9, 2260.0], [48.0, 2264.0], [48.1, 2272.0], [48.2, 2277.0], [48.3, 2283.0], [48.4, 2291.0], [48.5, 2296.0], [48.6, 2299.0], [48.7, 2305.0], [48.8, 2312.0], [48.9, 2319.0], [49.0, 2325.0], [49.1, 2333.0], [49.2, 2344.0], [49.3, 2355.0], [49.4, 2363.0], [49.5, 2370.0], [49.6, 2374.0], [49.7, 2388.0], [49.8, 2396.0], [49.9, 2403.0], [50.0, 2416.0], [50.1, 2430.0], [50.2, 2440.0], [50.3, 2451.0], [50.4, 2460.0], [50.5, 2467.0], [50.6, 2477.0], [50.7, 2482.0], [50.8, 2488.0], [50.9, 2494.0], [51.0, 2502.0], [51.1, 2511.0], [51.2, 2523.0], [51.3, 2530.0], [51.4, 2535.0], [51.5, 2542.0], [51.6, 2552.0], [51.7, 2559.0], [51.8, 2567.0], [51.9, 2573.0], [52.0, 2588.0], [52.1, 2598.0], [52.2, 2608.0], [52.3, 2611.0], [52.4, 2616.0], [52.5, 2628.0], [52.6, 2631.0], [52.7, 2637.0], [52.8, 2642.0], [52.9, 2649.0], [53.0, 2656.0], [53.1, 2663.0], [53.2, 2671.0], [53.3, 2678.0], [53.4, 2689.0], [53.5, 2694.0], [53.6, 2702.0], [53.7, 2708.0], [53.8, 2713.0], [53.9, 2721.0], [54.0, 2723.0], [54.1, 2729.0], [54.2, 2733.0], [54.3, 2737.0], [54.4, 2744.0], [54.5, 2750.0], [54.6, 2754.0], [54.7, 2764.0], [54.8, 2771.0], [54.9, 2779.0], [55.0, 2782.0], [55.1, 2788.0], [55.2, 2791.0], [55.3, 2800.0], [55.4, 2806.0], [55.5, 2808.0], [55.6, 2817.0], [55.7, 2822.0], [55.8, 2828.0], [55.9, 2834.0], [56.0, 2839.0], [56.1, 2843.0], [56.2, 2853.0], [56.3, 2857.0], [56.4, 2862.0], [56.5, 2874.0], [56.6, 2883.0], [56.7, 2889.0], [56.8, 2900.0], [56.9, 2906.0], [57.0, 2913.0], [57.1, 2923.0], [57.2, 2925.0], [57.3, 2932.0], [57.4, 2940.0], [57.5, 2949.0], [57.6, 2953.0], [57.7, 2959.0], [57.8, 2971.0], [57.9, 2978.0], [58.0, 2982.0], [58.1, 2988.0], [58.2, 2999.0], [58.3, 3004.0], [58.4, 3013.0], [58.5, 3020.0], [58.6, 3027.0], [58.7, 3034.0], [58.8, 3039.0], [58.9, 3043.0], [59.0, 3049.0], [59.1, 3054.0], [59.2, 3069.0], [59.3, 3075.0], [59.4, 3083.0], [59.5, 3087.0], [59.6, 3097.0], [59.7, 3103.0], [59.8, 3110.0], [59.9, 3120.0], [60.0, 3129.0], [60.1, 3137.0], [60.2, 3145.0], [60.3, 3148.0], [60.4, 3153.0], [60.5, 3160.0], [60.6, 3166.0], [60.7, 3174.0], [60.8, 3192.0], [60.9, 3195.0], [61.0, 3202.0], [61.1, 3207.0], [61.2, 3213.0], [61.3, 3223.0], [61.4, 3232.0], [61.5, 3240.0], [61.6, 3245.0], [61.7, 3250.0], [61.8, 3259.0], [61.9, 3268.0], [62.0, 3278.0], [62.1, 3289.0], [62.2, 3302.0], [62.3, 3310.0], [62.4, 3317.0], [62.5, 3323.0], [62.6, 3329.0], [62.7, 3338.0], [62.8, 3346.0], [62.9, 3353.0], [63.0, 3367.0], [63.1, 3374.0], [63.2, 3381.0], [63.3, 3388.0], [63.4, 3394.0], [63.5, 3400.0], [63.6, 3409.0], [63.7, 3416.0], [63.8, 3426.0], [63.9, 3431.0], [64.0, 3441.0], [64.1, 3449.0], [64.2, 3460.0], [64.3, 3463.0], [64.4, 3471.0], [64.5, 3479.0], [64.6, 3483.0], [64.7, 3490.0], [64.8, 3497.0], [64.9, 3504.0], [65.0, 3513.0], [65.1, 3526.0], [65.2, 3534.0], [65.3, 3542.0], [65.4, 3554.0], [65.5, 3567.0], [65.6, 3574.0], [65.7, 3579.0], [65.8, 3592.0], [65.9, 3598.0], [66.0, 3608.0], [66.1, 3615.0], [66.2, 3631.0], [66.3, 3644.0], [66.4, 3652.0], [66.5, 3655.0], [66.6, 3662.0], [66.7, 3684.0], [66.8, 3691.0], [66.9, 3700.0], [67.0, 3711.0], [67.1, 3720.0], [67.2, 3724.0], [67.3, 3738.0], [67.4, 3747.0], [67.5, 3755.0], [67.6, 3771.0], [67.7, 3778.0], [67.8, 3792.0], [67.9, 3801.0], [68.0, 3806.0], [68.1, 3813.0], [68.2, 3816.0], [68.3, 3819.0], [68.4, 3833.0], [68.5, 3844.0], [68.6, 3849.0], [68.7, 3860.0], [68.8, 3865.0], [68.9, 3874.0], [69.0, 3880.0], [69.1, 3887.0], [69.2, 3890.0], [69.3, 3901.0], [69.4, 3907.0], [69.5, 3917.0], [69.6, 3921.0], [69.7, 3931.0], [69.8, 3939.0], [69.9, 3949.0], [70.0, 3957.0], [70.1, 3967.0], [70.2, 3973.0], [70.3, 3980.0], [70.4, 3989.0], [70.5, 4008.0], [70.6, 4015.0], [70.7, 4021.0], [70.8, 4031.0], [70.9, 4042.0], [71.0, 4051.0], [71.1, 4061.0], [71.2, 4077.0], [71.3, 4086.0], [71.4, 4096.0], [71.5, 4112.0], [71.6, 4121.0], [71.7, 4134.0], [71.8, 4142.0], [71.9, 4152.0], [72.0, 4161.0], [72.1, 4175.0], [72.2, 4182.0], [72.3, 4191.0], [72.4, 4209.0], [72.5, 4214.0], [72.6, 4227.0], [72.7, 4234.0], [72.8, 4243.0], [72.9, 4250.0], [73.0, 4255.0], [73.1, 4267.0], [73.2, 4273.0], [73.3, 4276.0], [73.4, 4283.0], [73.5, 4295.0], [73.6, 4299.0], [73.7, 4304.0], [73.8, 4310.0], [73.9, 4317.0], [74.0, 4323.0], [74.1, 4330.0], [74.2, 4340.0], [74.3, 4346.0], [74.4, 4352.0], [74.5, 4359.0], [74.6, 4367.0], [74.7, 4375.0], [74.8, 4382.0], [74.9, 4390.0], [75.0, 4398.0], [75.1, 4406.0], [75.2, 4414.0], [75.3, 4426.0], [75.4, 4439.0], [75.5, 4446.0], [75.6, 4456.0], [75.7, 4461.0], [75.8, 4468.0], [75.9, 4475.0], [76.0, 4485.0], [76.1, 4491.0], [76.2, 4500.0], [76.3, 4508.0], [76.4, 4511.0], [76.5, 4523.0], [76.6, 4534.0], [76.7, 4540.0], [76.8, 4545.0], [76.9, 4549.0], [77.0, 4558.0], [77.1, 4567.0], [77.2, 4572.0], [77.3, 4579.0], [77.4, 4594.0], [77.5, 4599.0], [77.6, 4609.0], [77.7, 4618.0], [77.8, 4629.0], [77.9, 4638.0], [78.0, 4652.0], [78.1, 4657.0], [78.2, 4663.0], [78.3, 4676.0], [78.4, 4684.0], [78.5, 4690.0], [78.6, 4696.0], [78.7, 4703.0], [78.8, 4708.0], [78.9, 4713.0], [79.0, 4720.0], [79.1, 4725.0], [79.2, 4731.0], [79.3, 4740.0], [79.4, 4746.0], [79.5, 4759.0], [79.6, 4775.0], [79.7, 4781.0], [79.8, 4785.0], [79.9, 4797.0], [80.0, 4812.0], [80.1, 4821.0], [80.2, 4833.0], [80.3, 4840.0], [80.4, 4849.0], [80.5, 4857.0], [80.6, 4864.0], [80.7, 4876.0], [80.8, 4883.0], [80.9, 4892.0], [81.0, 4897.0], [81.1, 4904.0], [81.2, 4910.0], [81.3, 4919.0], [81.4, 4923.0], [81.5, 4932.0], [81.6, 4942.0], [81.7, 4953.0], [81.8, 4961.0], [81.9, 4967.0], [82.0, 4973.0], [82.1, 4985.0], [82.2, 4991.0], [82.3, 4998.0], [82.4, 5009.0], [82.5, 5015.0], [82.6, 5020.0], [82.7, 5030.0], [82.8, 5040.0], [82.9, 5046.0], [83.0, 5058.0], [83.1, 5068.0], [83.2, 5079.0], [83.3, 5087.0], [83.4, 5094.0], [83.5, 5102.0], [83.6, 5108.0], [83.7, 5117.0], [83.8, 5123.0], [83.9, 5140.0], [84.0, 5144.0], [84.1, 5150.0], [84.2, 5155.0], [84.3, 5162.0], [84.4, 5167.0], [84.5, 5186.0], [84.6, 5190.0], [84.7, 5199.0], [84.8, 5207.0], [84.9, 5215.0], [85.0, 5226.0], [85.1, 5236.0], [85.2, 5247.0], [85.3, 5253.0], [85.4, 5268.0], [85.5, 5277.0], [85.6, 5289.0], [85.7, 5293.0], [85.8, 5298.0], [85.9, 5310.0], [86.0, 5320.0], [86.1, 5328.0], [86.2, 5334.0], [86.3, 5347.0], [86.4, 5353.0], [86.5, 5366.0], [86.6, 5381.0], [86.7, 5390.0], [86.8, 5395.0], [86.9, 5403.0], [87.0, 5416.0], [87.1, 5422.0], [87.2, 5432.0], [87.3, 5439.0], [87.4, 5459.0], [87.5, 5473.0], [87.6, 5479.0], [87.7, 5486.0], [87.8, 5495.0], [87.9, 5505.0], [88.0, 5520.0], [88.1, 5527.0], [88.2, 5533.0], [88.3, 5540.0], [88.4, 5551.0], [88.5, 5563.0], [88.6, 5572.0], [88.7, 5582.0], [88.8, 5591.0], [88.9, 5599.0], [89.0, 5606.0], [89.1, 5619.0], [89.2, 5629.0], [89.3, 5634.0], [89.4, 5648.0], [89.5, 5658.0], [89.6, 5668.0], [89.7, 5675.0], [89.8, 5693.0], [89.9, 5702.0], [90.0, 5711.0], [90.1, 5724.0], [90.2, 5731.0], [90.3, 5739.0], [90.4, 5747.0], [90.5, 5759.0], [90.6, 5767.0], [90.7, 5778.0], [90.8, 5790.0], [90.9, 5798.0], [91.0, 5809.0], [91.1, 5818.0], [91.2, 5831.0], [91.3, 5846.0], [91.4, 5857.0], [91.5, 5876.0], [91.6, 5883.0], [91.7, 5895.0], [91.8, 5912.0], [91.9, 5921.0], [92.0, 5929.0], [92.1, 5945.0], [92.2, 5968.0], [92.3, 5985.0], [92.4, 6010.0], [92.5, 6029.0], [92.6, 6051.0], [92.7, 6063.0], [92.8, 6072.0], [92.9, 6099.0], [93.0, 6108.0], [93.1, 6127.0], [93.2, 6144.0], [93.3, 6160.0], [93.4, 6172.0], [93.5, 6197.0], [93.6, 6213.0], [93.7, 6224.0], [93.8, 6234.0], [93.9, 6256.0], [94.0, 6277.0], [94.1, 6287.0], [94.2, 6300.0], [94.3, 6321.0], [94.4, 6336.0], [94.5, 6351.0], [94.6, 6392.0], [94.7, 6405.0], [94.8, 6421.0], [94.9, 6449.0], [95.0, 6471.0], [95.1, 6507.0], [95.2, 6530.0], [95.3, 6548.0], [95.4, 6585.0], [95.5, 6616.0], [95.6, 6628.0], [95.7, 6640.0], [95.8, 6670.0], [95.9, 6689.0], [96.0, 6704.0], [96.1, 6726.0], [96.2, 6747.0], [96.3, 6768.0], [96.4, 6780.0], [96.5, 6819.0], [96.6, 6830.0], [96.7, 6851.0], [96.8, 6874.0], [96.9, 6909.0], [97.0, 6932.0], [97.1, 6957.0], [97.2, 6997.0], [97.3, 7011.0], [97.4, 7026.0], [97.5, 7048.0], [97.6, 7065.0], [97.7, 7094.0], [97.8, 7127.0], [97.9, 7168.0], [98.0, 7194.0], [98.1, 7223.0], [98.2, 7257.0], [98.3, 7285.0], [98.4, 7311.0], [98.5, 7343.0], [98.6, 7361.0], [98.7, 7385.0], [98.8, 7429.0], [98.9, 7453.0], [99.0, 7474.0], [99.1, 7503.0], [99.2, 7533.0], [99.3, 7563.0], [99.4, 7611.0], [99.5, 7655.0], [99.6, 7733.0], [99.7, 7766.0], [99.8, 7822.0], [99.9, 7913.0]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1331.0, "series": [{"data": [[0.0, 1331.0], [600.0, 85.0], [700.0, 105.0], [800.0, 103.0], [900.0, 111.0], [1000.0, 108.0], [1100.0, 93.0], [1200.0, 97.0], [1300.0, 98.0], [1400.0, 84.0], [1500.0, 102.0], [1600.0, 91.0], [1700.0, 103.0], [1800.0, 103.0], [1900.0, 87.0], [2000.0, 91.0], [2100.0, 106.0], [2200.0, 123.0], [2300.0, 96.0], [2400.0, 88.0], [2500.0, 88.0], [2600.0, 112.0], [2800.0, 117.0], [2700.0, 132.0], [2900.0, 113.0], [3000.0, 107.0], [3100.0, 104.0], [3200.0, 92.0], [3300.0, 101.0], [3400.0, 102.0], [3500.0, 85.0], [3700.0, 76.0], [3600.0, 76.0], [3800.0, 109.0], [3900.0, 88.0], [4000.0, 79.0], [4300.0, 109.0], [4200.0, 98.0], [4100.0, 69.0], [4500.0, 102.0], [4400.0, 90.0], [4600.0, 88.0], [4700.0, 98.0], [4800.0, 87.0], [4900.0, 99.0], [5000.0, 87.0], [5100.0, 98.0], [5200.0, 86.0], [5300.0, 81.0], [5500.0, 82.0], [5400.0, 76.0], [5600.0, 72.0], [5700.0, 83.0], [5800.0, 65.0], [5900.0, 48.0], [6100.0, 47.0], [6000.0, 41.0], [6200.0, 52.0], [6300.0, 37.0], [6400.0, 32.0], [6600.0, 40.0], [6500.0, 28.0], [6700.0, 35.0], [6800.0, 35.0], [6900.0, 28.0], [7000.0, 37.0], [7100.0, 23.0], [7200.0, 26.0], [7300.0, 29.0], [7400.0, 27.0], [7600.0, 11.0], [7500.0, 24.0], [7700.0, 20.0], [7800.0, 8.0], [7900.0, 8.0], [8100.0, 1.0], [100.0, 355.0], [200.0, 86.0], [300.0, 97.0], [400.0, 114.0], [500.0, 84.0]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 11.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 7718.0, "series": [{"data": [[0.0, 11.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [[3.0, 7718.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3029.567861301576, "minX": 1.75927278E12, "maxY": 3029.567861301576, "series": [{"data": [[1.75927278E12, 3029.567861301576]], "isOverall": false, "label": "Thread GroupMy Test5000", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927278E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 8162.0, "series": [{"data": [[270.0, 4009.0], [269.0, 4497.0], [265.0, 4090.6015936255044], [266.0, 3913.857142857143], [267.0, 5160.833333333334], [287.0, 2971.0], [286.0, 1823.5], [283.0, 7444.0], [282.0, 1279.0], [280.0, 5402.5], [278.0, 4834.0], [277.0, 5872.5], [276.0, 7915.0], [275.0, 4557.666666666667], [274.0, 2891.0], [301.0, 2357.5], [300.0, 4463.0], [297.0, 1968.0], [296.0, 2775.75], [295.0, 6321.0], [293.0, 5819.0], [291.0, 3414.0], [290.0, 4866.0], [317.0, 3847.0], [319.0, 3844.5], [316.0, 907.0], [307.0, 515.0], [306.0, 6861.0], [305.0, 3557.5], [315.0, 1829.0], [313.0, 7904.0], [312.0, 3199.0], [311.0, 309.0], [310.0, 5353.5], [308.0, 6127.0], [334.0, 497.0], [335.0, 3762.0], [332.0, 3441.0], [331.0, 5868.0], [328.0, 6392.0], [327.0, 5543.0], [325.0, 2948.0], [324.0, 2653.0], [323.0, 5272.0], [320.0, 7335.0], [350.0, 1789.0], [351.0, 3188.5], [349.0, 6052.0], [338.0, 2642.5], [337.0, 6753.0], [347.0, 2043.0], [346.0, 189.0], [345.0, 7624.0], [344.0, 3328.0], [343.0, 1063.0], [342.0, 6815.0], [341.0, 3306.25], [355.0, 5215.0], [366.0, 4886.0], [364.0, 6003.5], [362.0, 2349.5], [360.0, 5166.0], [359.0, 2274.0], [358.0, 2311.5], [357.0, 5064.0], [356.0, 2787.0], [354.0, 3314.0], [353.0, 6535.0], [382.0, 4543.0], [383.0, 3874.0], [380.0, 1408.0], [377.0, 3760.5], [375.0, 5728.0], [374.0, 3091.5], [373.0, 1256.0], [372.0, 4428.5], [371.0, 6357.0], [368.0, 3357.75], [397.0, 5523.0], [398.0, 3846.0], [396.0, 6671.5], [395.0, 3017.0], [393.0, 5837.0], [392.0, 3089.0], [391.0, 4654.5], [387.0, 265.0], [386.0, 7555.0], [384.0, 1999.0], [413.0, 5731.0], [414.0, 3471.0], [412.0, 7355.0], [403.0, 2761.0], [402.0, 3855.0], [401.0, 6594.5], [400.0, 7204.0], [411.0, 5479.5], [410.0, 15.0], [409.0, 7222.0], [407.0, 3380.0], [406.0, 4897.0], [405.0, 6224.0], [404.0, 3075.0], [431.0, 4663.0], [430.0, 3289.0], [427.0, 2111.25], [423.0, 2417.0], [421.0, 4546.0], [420.0, 3374.0], [419.0, 4908.0], [418.0, 7715.0], [446.0, 595.0], [447.0, 3276.0], [442.0, 4063.0], [434.0, 4229.0], [432.0, 5074.0], [460.0, 2913.0], [459.0, 4580.0], [457.0, 3377.0], [456.0, 4365.5], [455.0, 3894.5], [450.0, 3314.8333333333335], [448.0, 6052.0], [449.0, 7343.0], [476.0, 3787.0], [478.0, 3755.0], [479.0, 3839.0], [477.0, 3080.75], [473.0, 3811.0], [472.0, 3835.0], [470.0, 2507.0], [471.0, 257.0], [467.0, 2689.0], [466.0, 2561.5], [465.0, 2999.0], [464.0, 2497.5], [487.0, 6171.0], [491.0, 1022.0], [510.0, 5700.5], [508.0, 4478.666666666667], [506.0, 6145.0], [507.0, 4461.0], [499.0, 6154.0], [504.0, 7630.0], [514.0, 5665.0], [540.0, 3746.0], [536.0, 5799.0], [528.0, 3050.0], [522.0, 5685.666666666667], [520.0, 2393.0], [512.0, 651.0], [518.0, 5920.0], [530.0, 6095.666666666667], [532.0, 224.0], [568.0, 2991.0], [574.0, 2064.3333333333335], [566.0, 7124.0], [560.0, 2978.0], [572.0, 3162.5], [546.0, 462.0], [548.0, 414.0], [552.0, 6226.0], [554.0, 6083.0], [556.0, 4806.75], [596.0, 2903.5], [594.0, 2797.0], [578.0, 6778.666666666667], [588.0, 2775.0], [576.0, 1901.0], [580.0, 5250.0], [670.0, 3104.3333333333335], [698.0, 2635.0], [700.0, 757.0], [696.0, 1643.0], [692.0, 4948.0], [686.0, 4169.5], [684.0, 5496.0], [682.0, 2003.6666666666667], [680.0, 3744.0], [674.0, 4014.93220338983], [672.0, 3677.2222222222217], [732.0, 2180.5], [716.0, 2378.5], [714.0, 4196.0], [710.0, 5260.0], [708.0, 4122.5], [706.0, 2723.0], [704.0, 4626.0], [764.0, 2709.0], [760.0, 1828.0], [758.0, 4628.2], [754.0, 5653.0], [756.0, 2221.0], [748.0, 3192.0], [746.0, 6196.5], [744.0, 5976.0], [752.0, 3509.5], [742.0, 3520.5], [798.0, 3373.75], [794.0, 4152.8], [788.0, 3137.0], [784.0, 6708.0], [776.0, 5725.0], [772.0, 3171.75], [770.0, 6780.0], [814.0, 5272.0], [812.0, 4616.0], [810.0, 2982.25], [808.0, 5227.5], [806.0, 3752.5], [802.0, 7403.0], [870.0, 779.7619047619048], [910.0, 70.0], [900.0, 1972.0], [932.0, 119.0], [936.0, 140.0], [944.0, 164.0], [946.0, 972.0], [984.0, 269.0], [996.0, 290.0], [1006.0, 315.0], [1068.0, 416.0], [1260.0, 634.0], [1468.0, 2952.0000000000005], [1464.0, 4528.1], [1460.0, 3865.75], [1456.0, 2293.166666666667], [1484.0, 2837.625], [1524.0, 5720.0], [1532.0, 5463.5], [1520.0, 2810.5], [1480.0, 4373.866666666668], [1476.0, 3953.474576271187], [1472.0, 3696.1315789473674], [1516.0, 806.0], [1504.0, 1568.0], [1500.0, 3245.5], [1496.0, 4164.189189189188], [1492.0, 3575.9999999999995], [1488.0, 3707.117647058824], [1568.0, 784.0], [1592.0, 3243.0], [1584.0, 913.0], [1572.0, 3340.428571428571], [1548.0, 4044.0], [1540.0, 1317.0], [1636.0, 790.0], [1640.0, 2790.0], [1632.0, 2273.3333333333335], [1624.0, 4011.0], [1620.0, 2388.0], [1616.0, 2292.0], [1612.0, 1199.0], [1600.0, 4534.0], [1712.0, 5519.0], [1700.0, 5270.0], [1724.0, 6121.0], [1696.0, 7264.5], [1688.0, 1528.0], [1668.0, 5030.0], [1708.0, 4927.0], [1684.0, 2906.6666666666665], [1680.0, 81.0], [1676.0, 4036.5], [1672.0, 7101.0], [1736.0, 42.5], [1780.0, 3422.333333333333], [1764.0, 3743.3333333333335], [1740.0, 1931.4], [1756.0, 6441.0], [1752.0, 4079.0], [1748.0, 3237.0], [1744.0, 2628.0], [1784.0, 5941.5], [1772.0, 3212.0], [1768.0, 7249.0], [1760.0, 2542.5], [1804.0, 807.0], [1820.0, 4890.0], [1816.0, 3182.0], [1812.0, 3038.5], [1808.0, 2843.0], [1904.0, 2460.0], [1908.0, 1056.0], [1916.0, 4853.333333333333], [1912.0, 3171.0], [1864.0, 3082.0], [1860.0, 3557.0], [1856.0, 3627.0], [1884.0, 2960.0], [1880.0, 1258.0], [1872.0, 5322.666666666667], [1932.0, 5115.0], [1980.0, 3911.0], [1972.0, 5398.0], [1968.0, 6688.0], [1928.0, 3106.0], [1948.0, 1507.0], [1940.0, 2764.0], [1936.0, 3918.5], [1960.0, 3475.5], [2024.0, 5551.5], [2028.0, 940.0], [2016.0, 3087.333333333333], [2012.0, 10.0], [1984.0, 3807.5], [1996.0, 1979.5], [2004.0, 7142.0], [2000.0, 4493.333333333333], [2096.0, 5705.0], [2416.0, 2456.0], [2344.0, 2.0], [2336.0, 142.0], [2408.0, 3700.85], [2424.0, 6306.0], [2400.0, 998.5], [2384.0, 4358.666666666667], [2376.0, 5423.0], [2392.0, 3669.5000000000005], [2544.0, 2956.0], [2528.0, 616.5], [2448.0, 1861.0], [2440.0, 5124.0], [2432.0, 954.0], [2536.0, 543.0], [2552.0, 2.75], [2504.0, 1551.0], [2512.0, 2.6666666666666665], [2520.0, 2527.8], [2464.0, 2150.3333333333335], [2472.0, 4685.333333333333], [2480.0, 1785.0], [2488.0, 4552.333333333333], [2616.0, 810.0], [2560.0, 1.75], [2592.0, 1.96078431372549], [2600.0, 5676.0], [2608.0, 1098.0], [2576.0, 3012.75], [2568.0, 6839.0], [2632.0, 4777.0], [2624.0, 4005.0], [2680.0, 3476.0], [2672.0, 5828.333333333333], [2664.0, 4526.0], [2784.0, 637.0], [2808.0, 107.0], [2752.0, 1050.0], [2792.0, 286.5], [2688.0, 3052.5], [2704.0, 3914.0], [2712.0, 3447.0], [2744.0, 1417.5], [2728.0, 2697.0], [2776.0, 4940.5], [2768.0, 5612.5], [2816.0, 5474.5], [2864.0, 1437.5], [2856.0, 4423.0], [2848.0, 5585.0], [2832.0, 2016.25], [2872.0, 3979.0], [2896.0, 3518.5], [2928.0, 6620.0], [2888.0, 4475.0], [3064.0, 3542.0], [3016.0, 1389.0], [3048.0, 4462.0], [3040.0, 1447.0], [2968.0, 3827.5], [2952.0, 2199.0], [2944.0, 1654.0], [3024.0, 3652.0], [3184.0, 2883.8571428571427], [3168.0, 3886.1], [3192.0, 1656.0], [3176.0, 3283.25], [3072.0, 639.0], [3296.0, 1082.0], [3304.0, 4375.0], [3272.0, 4155.5], [3320.0, 5746.666666666667], [3224.0, 4332.0], [3208.0, 2337.0], [3200.0, 2492.5], [3232.0, 4438.0], [3264.0, 2796.5], [3280.0, 3813.0], [3448.0, 2963.0], [3392.0, 2274.0], [3400.0, 4152.8], [3416.0, 3536.3333333333335], [3408.0, 1577.0], [3432.0, 1417.3333333333333], [3424.0, 1694.0], [3328.0, 5325.666666666667], [3336.0, 3409.0], [3344.0, 2066.75], [3384.0, 4271.5], [3376.0, 4204.0], [3368.0, 2085.0], [3464.0, 951.0], [3576.0, 2774.0], [3512.0, 2106.3333333333335], [3488.0, 3757.0], [3456.0, 3473.0], [3520.0, 2222.0], [3536.0, 2144.0], [3544.0, 3191.0], [3568.0, 3917.0], [3552.0, 2963.3333333333335], [3472.0, 3712.5], [3560.0, 3396.5], [3600.0, 1798.0], [3608.0, 3879.0], [3648.0, 1991.8], [3584.0, 3029.0], [3624.0, 2307.0], [3616.0, 5337.75], [3824.0, 1164.0], [4032.0, 2454.0], [3992.0, 149.0], [4240.0, 3051.0], [4224.0, 3937.5], [4272.0, 3723.0], [4336.0, 1702.5], [4320.0, 1287.0], [4304.0, 2590.3636363636365], [4208.0, 3841.0], [4576.0, 429.66666666666663], [4592.0, 714.1666666666667], [4480.0, 2.0], [4496.0, 1523.25], [4512.0, 2972.285714285714], [4528.0, 2442.0], [4560.0, 2855.0], [4544.0, 118.0], [4400.0, 3024.785714285715], [4384.0, 1.6666666666666665], [4368.0, 2605.3333333333335], [4352.0, 4522.0], [4448.0, 1085.0], [4432.0, 1514.37037037037], [4416.0, 2538.75], [4464.0, 2212.0], [4640.0, 973.6111111111111], [4656.0, 2399.666666666667], [4624.0, 802.5], [4608.0, 2384.6666666666665], [4672.0, 2219.0], [4337.0, 2946.6666666666665], [4225.0, 5392.0], [4241.0, 4720.5], [4257.0, 3058.5], [4273.0, 753.0], [4321.0, 5009.0], [4305.0, 2993.5], [4289.0, 3046.3333333333335], [4209.0, 1716.142857142857], [4161.0, 917.0], [4353.0, 2549.3750000000005], [4401.0, 850.3333333333334], [4545.0, 737.2], [4593.0, 1965.4999999999998], [4465.0, 1726.5555555555557], [4449.0, 4133.0], [4433.0, 1312.1666666666667], [4417.0, 2884.0], [4369.0, 4794.0], [4385.0, 831.6666666666667], [4481.0, 428.16666666666674], [4497.0, 3702.0], [4513.0, 3050.222222222222], [4529.0, 2538.0], [4577.0, 2483.0], [4625.0, 2564.285714285714], [4609.0, 576.6521739130435], [4641.0, 3163.75], [4657.0, 2711.25], [4673.0, 2153.5], [2297.0, 4.0], [2257.0, 3894.0], [2417.0, 3526.0625], [2321.0, 4.0], [2313.0, 3.0], [2305.0, 3.0], [2361.0, 2.5], [2353.0, 7022.0], [2377.0, 1.0], [2369.0, 1988.0], [2385.0, 4476.625000000002], [2425.0, 3437.6666666666665], [2409.0, 3560.8888888888887], [2401.0, 2958.0000000000005], [2393.0, 2517.4], [2529.0, 3419.5], [2545.0, 3.5], [2457.0, 4367.0], [2481.0, 3275.6666666666665], [2537.0, 4448.5], [2497.0, 5070.0], [2521.0, 910.1111111111111], [2513.0, 5061.333333333333], [2465.0, 2.0], [2473.0, 2466.0], [2577.0, 4409.0], [2681.0, 6745.0], [2561.0, 1209.1666666666665], [2569.0, 5903.333333333333], [2601.0, 171.0], [2625.0, 3712.0], [2673.0, 4702.0], [2665.0, 4474.0], [2657.0, 2105.6666666666665], [2641.0, 2033.0], [2793.0, 4355.0], [2801.0, 5263.5], [2785.0, 2153.0], [2689.0, 697.0], [2705.0, 4042.0], [2713.0, 4716.0], [2721.0, 1938.0], [2841.0, 5584.0], [2913.0, 470.0], [2825.0, 4507.0], [2817.0, 999.5], [2857.0, 494.0], [2849.0, 4540.0], [2905.0, 5380.5], [2889.0, 1956.5], [2881.0, 5723.0], [2969.0, 4241.5], [3057.0, 3069.5], [2961.0, 3525.0], [2953.0, 4412.5], [2945.0, 778.0], [3001.0, 930.0], [2993.0, 4723.0], [3025.0, 4654.0], [3177.0, 3296.0625], [3193.0, 2776.4], [3169.0, 2909.5], [3073.0, 4942.0], [3313.0, 1531.0], [3321.0, 5989.0], [3217.0, 2079.5], [3201.0, 3282.6], [3257.0, 3778.0], [3249.0, 3147.2], [3233.0, 5788.0], [3289.0, 2934.6], [3281.0, 3318.3333333333335], [3425.0, 2078.0], [3401.0, 2196.0], [3417.0, 1827.6666666666665], [3409.0, 2283.0], [3345.0, 6210.0], [3337.0, 2902.0], [3377.0, 4290.0], [3361.0, 3288.25], [3465.0, 3414.0], [3457.0, 3583.5], [3561.0, 2317.75], [3513.0, 1908.5], [3497.0, 3358.5], [3537.0, 1624.0], [3593.0, 3631.5], [3585.0, 3951.285714285714], [3601.0, 2045.0], [3665.0, 1501.3333333333333], [3681.0, 3973.0], [3617.0, 3470.3333333333335], [3793.0, 2299.0], [3921.0, 1387.0], [3913.0, 2815.0], [4033.0, 1704.6666666666667], [4226.0, 1933.8], [4322.0, 2588.1000000000004], [4242.0, 2364.1111111111113], [4258.0, 2286.2000000000003], [4338.0, 3800.0], [4306.0, 2530.8888888888887], [4290.0, 3584.0], [4594.0, 2135.2], [4482.0, 1603.4], [4498.0, 2026.8333333333333], [4514.0, 2950.9], [4530.0, 2551.6], [4578.0, 1019.5], [4562.0, 1661.3333333333333], [4402.0, 124.14285714285714], [4386.0, 1345.0666666666666], [4370.0, 2981.0], [4546.0, 58.25], [4434.0, 533.1666666666666], [4418.0, 1743.0], [4450.0, 3631.0], [4466.0, 2608.4285714285716], [4354.0, 3158.1538461538457], [4642.0, 2902.25], [4658.0, 417.0], [4610.0, 518.8000000000001], [4626.0, 1836.1666666666667], [4227.0, 684.0], [4339.0, 3002.8], [4243.0, 2985.3333333333335], [4259.0, 2172.9], [4275.0, 1677.6], [4323.0, 1740.125], [4307.0, 1622.5], [4291.0, 4712.0], [4211.0, 96.0], [4387.0, 1811.1428571428573], [4547.0, 1098.2], [4467.0, 3709.0], [4451.0, 5477.0], [4419.0, 2325.25], [4435.0, 3014.1875000000005], [4355.0, 2356.6666666666665], [4403.0, 381.0], [4563.0, 1221.5555555555557], [4483.0, 1637.9545454545455], [4499.0, 2618.333333333333], [4515.0, 3439.428571428571], [4531.0, 2256.0], [4595.0, 4346.0], [4579.0, 1039.642857142857], [4659.0, 2224.25], [4675.0, 1910.0], [4611.0, 312.5], [4627.0, 782.5], [4643.0, 1240.5], [1045.0, 358.0], [1053.0, 1269.0], [1105.0, 7350.0], [1249.0, 457.0], [1293.0, 483.0], [1337.0, 502.0], [1469.0, 4059.142857142857], [1457.0, 3612.7999999999997], [1465.0, 3103.714285714286], [1461.0, 1738.0], [1529.0, 6051.5], [1533.0, 6492.0], [1525.0, 4714.0], [1521.0, 5492.5], [1517.0, 3290.8], [1509.0, 5146.0], [1505.0, 2408.6666666666665], [1501.0, 1357.3333333333333], [1477.0, 4271.05], [1473.0, 3703.9259259259256], [1485.0, 3137.9142857142865], [1481.0, 4729.0], [1497.0, 5227.0], [1493.0, 3881.394736842106], [1489.0, 3889.3888888888887], [1597.0, 2005.0], [1593.0, 4970.0], [1585.0, 4911.0], [1557.0, 5614.666666666667], [1553.0, 6192.666666666667], [1549.0, 5994.0], [1657.0, 5166.0], [1661.0, 6770.0], [1653.0, 5636.0], [1637.0, 4404.0], [1633.0, 3519.5], [1629.0, 5212.333333333333], [1625.0, 3523.5], [1621.0, 4356.0], [1609.0, 5174.0], [1605.0, 2836.0], [1725.0, 1608.0], [1713.0, 3678.0], [1693.0, 5019.666666666667], [1689.0, 5433.0], [1701.0, 6173.5], [1685.0, 4136.0], [1673.0, 4296.0], [1669.0, 4177.5], [1781.0, 2867.0], [1769.0, 1522.0], [1741.0, 4904.0], [1733.0, 4278.0], [1757.0, 6671.0], [1745.0, 7257.0], [1773.0, 4173.0], [1765.0, 2071.0], [1849.0, 4332.0], [1829.0, 3182.0], [1841.0, 4278.2], [1793.0, 4442.833333333334], [1821.0, 2495.0], [1817.0, 4820.0], [1809.0, 2386.3333333333335], [1825.0, 3755.5], [1845.0, 3690.0], [1837.0, 3404.3333333333335], [1917.0, 5272.0], [1909.0, 4942.0], [1893.0, 4336.0], [1857.0, 4857.0], [1865.0, 5092.0], [1869.0, 3329.6666666666665], [1881.0, 1670.5], [1877.0, 2293.0], [1973.0, 3261.5], [1961.0, 3838.5], [1981.0, 4758.0], [1953.0, 3404.5], [1949.0, 3163.0], [1925.0, 5169.0], [1929.0, 4489.5], [1933.0, 1638.0], [1941.0, 173.0], [1965.0, 2413.0], [1957.0, 5348.0], [1989.0, 5070.0], [2013.0, 126.0], [2017.0, 3130.0], [1985.0, 3152.0], [2021.0, 1793.0], [2009.0, 3294.0], [2005.0, 7142.0], [2001.0, 7089.0], [2194.0, 871.0], [2290.0, 3.0], [2402.0, 3625.4375], [2330.0, 6.0], [2314.0, 3.0], [2354.0, 5150.0], [2378.0, 4573.0], [2386.0, 3831.727272727273], [2418.0, 2331.0], [2410.0, 5141.0], [2394.0, 4626.583333333333], [2530.0, 1462.3333333333333], [2450.0, 1422.5], [2434.0, 2449.0], [2442.0, 3162.5], [2458.0, 5238.0], [2538.0, 2.2], [2546.0, 4705.5], [2498.0, 5160.0], [2554.0, 2074.3333333333335], [2506.0, 1043.25], [2514.0, 960.0], [2522.0, 2291.0], [2474.0, 1520.0], [2490.0, 1860.5], [2578.0, 943.0], [2586.0, 1929.8], [2570.0, 2778.0], [2602.0, 6811.0], [2594.0, 4678.0], [2682.0, 4274.0], [2626.0, 4700.0], [2674.0, 4779.0], [2658.0, 3333.5], [2706.0, 4105.5], [2802.0, 989.0], [2754.0, 2810.5], [2794.0, 1724.0], [2698.0, 3931.0], [2746.0, 6360.0], [2730.0, 4595.0], [2722.0, 5620.0], [2778.0, 283.0], [2770.0, 5504.0], [2762.0, 2732.0], [2826.0, 4939.0], [2866.0, 2299.666666666667], [2850.0, 2366.0], [2930.0, 128.0], [2922.0, 5192.0], [2842.0, 1791.0], [2818.0, 4598.0], [2874.0, 3497.0], [2906.0, 5010.0], [2898.0, 1570.0], [2890.0, 5467.0], [2962.0, 3564.0], [3026.0, 1236.0], [3010.0, 2626.0], [3058.0, 4090.0], [2994.0, 1045.0], [2946.0, 3946.0], [2954.0, 2263.0], [2970.0, 4436.0], [2986.0, 4219.0], [2978.0, 3255.3333333333335], [3034.0, 2051.0], [3018.0, 4368.0], [3194.0, 3354.5], [3170.0, 3207.2], [3074.0, 4957.0], [3138.0, 4953.0], [3186.0, 4510.0], [3178.0, 3347.0], [3298.0, 800.0], [3322.0, 4456.0], [3226.0, 3141.5], [3202.0, 4384.875], [3258.0, 2790.5], [3250.0, 3158.666666666667], [3234.0, 3895.5], [3290.0, 3997.0], [3282.0, 3913.5], [3274.0, 5517.0], [3394.0, 6282.0], [3442.0, 5082.0], [3426.0, 419.0], [3354.0, 1747.6666666666665], [3330.0, 2745.0], [3386.0, 4106.666666666667], [3466.0, 3278.0], [3506.0, 1993.0], [3498.0, 102.0], [3514.0, 3009.4], [3530.0, 1687.0], [3538.0, 1916.0], [3578.0, 2874.0], [3562.0, 2131.0], [3554.0, 1152.0], [3482.0, 2189.0], [3658.0, 832.0], [3586.0, 4097.5], [3610.0, 4933.5], [3634.0, 3071.3333333333335], [3626.0, 1425.0], [3618.0, 2865.0], [3778.0, 1339.0], [3914.0, 5628.0], [4058.0, 2133.0], [4026.0, 3334.5], [4340.0, 3222.75], [4244.0, 4421.5], [4228.0, 3606.6666666666665], [4260.0, 4083.0], [4276.0, 2217.5714285714284], [4324.0, 2558.5], [4308.0, 2273.4285714285716], [4292.0, 3143.3333333333335], [4212.0, 1307.3333333333335], [4596.0, 443.0], [4580.0, 389.3], [4484.0, 1150.3], [4500.0, 2615.333333333333], [4516.0, 2628.3333333333335], [4532.0, 2495.0], [4564.0, 2475.0], [4548.0, 33.0], [4404.0, 1002.25], [4388.0, 1177.6666666666665], [4372.0, 1463.0], [4356.0, 3025.6], [4468.0, 612.25], [4452.0, 2529.8], [4436.0, 1381.1666666666665], [4420.0, 2901.0], [4644.0, 1615.1000000000001], [4660.0, 3904.5], [4628.0, 1322.6153846153845], [4612.0, 2679.833333333333], [4341.0, 2293.25], [4229.0, 2293.5], [4245.0, 2818.0], [4261.0, 1874.5], [4277.0, 1672.4285714285716], [4325.0, 2384.0], [4309.0, 3691.5], [4293.0, 1879.0], [4213.0, 2729.6666666666665], [4357.0, 3317.0], [4405.0, 2.0], [4469.0, 1427.3333333333335], [4453.0, 2287.8], [4437.0, 571.5294117647059], [4421.0, 2655.0], [4549.0, 31.3], [4389.0, 894.2857142857142], [4373.0, 1395.0], [4565.0, 1832.1], [4485.0, 1108.8], [4501.0, 2092.666666666667], [4517.0, 3411.5], [4533.0, 1335.0], [4597.0, 2696.6666666666665], [4581.0, 833.2], [4677.0, 3987.0], [4613.0, 1023.0], [4661.0, 2420.2], [4645.0, 1387.4], [4629.0, 1495.75], [2123.0, 2118.0], [2299.0, 4.0], [2251.0, 832.0], [2283.0, 2406.0], [2419.0, 3302.125], [2307.0, 4.0], [2331.0, 1.5], [2387.0, 4185.0], [2379.0, 3090.5], [2427.0, 2283.0], [2411.0, 3607.833333333334], [2403.0, 3475.0714285714284], [2395.0, 2795.111111111111], [2451.0, 1272.3333333333333], [2539.0, 2232.0], [2443.0, 4108.0], [2459.0, 6089.666666666667], [2491.0, 4397.0], [2531.0, 4565.0], [2475.0, 1.5], [2467.0, 4701.0], [2547.0, 1547.0], [2555.0, 481.5], [2515.0, 3.0], [2507.0, 2158.0], [2483.0, 2963.6666666666665], [2579.0, 1088.0], [2587.0, 2.3636363636363638], [2571.0, 479.5], [2619.0, 4862.666666666667], [2603.0, 4791.666666666667], [2595.0, 2266.0], [2627.0, 4340.0], [2659.0, 1773.0], [2651.0, 2299.0], [2643.0, 1704.0], [2635.0, 2797.0], [2795.0, 5194.0], [2763.0, 6289.5], [2787.0, 876.0], [2739.0, 3330.0], [2731.0, 2333.0], [2723.0, 787.0], [2779.0, 6747.0], [2771.0, 1798.0], [2931.0, 1390.0], [2939.0, 2156.4], [2883.0, 2282.5], [2899.0, 4546.0], [2915.0, 3969.0], [2835.0, 3454.3333333333335], [2819.0, 4509.0], [2867.0, 4304.0], [2859.0, 4450.0], [2907.0, 6620.0], [3043.0, 3581.333333333333], [3059.0, 183.0], [3067.0, 4239.5], [3019.0, 2923.5], [2963.0, 5010.0], [2955.0, 5391.5], [2947.0, 1269.0], [2995.0, 2014.0], [2987.0, 1909.0], [2979.0, 4176.0], [3035.0, 3884.4], [3027.0, 4157.5], [3171.0, 2518.5], [3075.0, 3435.0], [3195.0, 3567.3333333333335], [3187.0, 3447.0], [3139.0, 1048.0], [3307.0, 638.0], [3315.0, 3310.6666666666665], [3299.0, 2206.0], [3227.0, 6284.0], [3211.0, 4017.5], [3203.0, 3798.3333333333335], [3259.0, 2280.0], [3291.0, 6309.0], [3283.0, 4480.0], [3267.0, 6123.5], [3339.0, 3340.0], [3347.0, 3286.5], [3387.0, 5820.0], [3331.0, 3462.0], [3379.0, 3594.0], [3363.0, 4098.0], [3395.0, 4213.0], [3403.0, 5791.0], [3443.0, 1691.5], [3355.0, 1811.0], [3467.0, 2681.0], [3459.0, 3083.0], [3483.0, 920.0], [3475.0, 557.5], [3507.0, 1740.0], [3499.0, 3982.0], [3491.0, 1270.0], [3515.0, 969.0], [3531.0, 2292.25], [3539.0, 3345.0], [3579.0, 1591.0], [3563.0, 2190.5], [3643.0, 5390.0], [3595.0, 1978.0], [3587.0, 1583.0], [3603.0, 2215.0], [3627.0, 2716.0], [3619.0, 3675.5], [3787.0, 721.0], [3947.0, 1868.0], [3907.0, 5813.0], [3979.0, 2810.0], [4230.0, 2453.75], [4326.0, 2771.0], [4246.0, 2035.0], [4262.0, 2113.75], [4278.0, 3282.944444444445], [4342.0, 1637.6666666666665], [4310.0, 3304.666666666667], [4294.0, 1193.0], [4214.0, 2545.2], [4582.0, 3.2], [4598.0, 2138.6666666666665], [4502.0, 1537.75], [4486.0, 2361.3749999999995], [4518.0, 4382.0], [4566.0, 1139.5], [4550.0, 732.6666666666667], [4390.0, 693.25], [4374.0, 3041.0], [4470.0, 3091.3333333333335], [4438.0, 2798.3913043478256], [4422.0, 3980.0], [4454.0, 3713.3333333333335], [4646.0, 1930.5], [4662.0, 2076.4], [4630.0, 900.6], [4614.0, 960.9166666666667], [4327.0, 1263.6666666666667], [4343.0, 1715.0], [4247.0, 3616.0], [4263.0, 4308.0], [4279.0, 3734.6666666666665], [4311.0, 2710.5], [4295.0, 3475.0], [4215.0, 2286.666666666667], [4167.0, 1026.0], [4359.0, 2068.25], [4471.0, 2078.6666666666665], [4455.0, 2768.6666666666665], [4423.0, 3151.285714285714], [4439.0, 805.6285714285715], [4551.0, 2072.333333333333], [4375.0, 3236.0], [4391.0, 2293.3333333333335], [4567.0, 357.0], [4487.0, 2006.6190476190477], [4503.0, 2466.9999999999995], [4519.0, 1455.4], [4535.0, 2262.0], [4599.0, 3712.0], [4583.0, 1321.8], [4647.0, 2393.0], [4679.0, 1295.5], [4663.0, 1769.3333333333333], [4631.0, 1629.8], [539.0, 4681.0], [543.0, 4765.6], [537.0, 1395.0], [535.0, 4411.333333333333], [533.0, 7822.0], [531.0, 5275.0], [541.0, 215.0], [527.0, 3750.0], [513.0, 3925.0], [515.0, 6850.0], [573.0, 5654.0], [569.0, 3811.0], [563.0, 3232.5], [575.0, 4902.0], [545.0, 2968.5], [547.0, 800.0], [593.0, 3244.8], [589.0, 3544.6363636363635], [587.0, 4991.444444444444], [583.0, 4463.0], [577.0, 1963.5], [579.0, 6202.0], [671.0, 3792.833333333333], [679.0, 3269.5], [701.0, 4144.0], [697.0, 331.0], [695.0, 2936.0], [691.0, 1217.5], [689.0, 1134.0], [687.0, 4947.0], [685.0, 7655.0], [683.0, 4460.666666666667], [677.0, 3783.6666666666665], [673.0, 5104.0], [733.0, 2949.0], [735.0, 3299.0], [721.0, 3130.5], [719.0, 2385.0], [717.0, 4046.5], [711.0, 4146.0], [707.0, 5397.0], [765.0, 4364.5], [757.0, 2339.0], [755.0, 6697.5], [753.0, 5568.0], [751.0, 3898.5], [749.0, 5840.0], [741.0, 2160.5], [743.0, 7733.0], [745.0, 4674.0], [789.0, 3750.0], [787.0, 6067.333333333333], [783.0, 2955.5], [781.0, 5633.666666666667], [779.0, 267.0], [777.0, 3891.5], [773.0, 2461.6666666666665], [771.0, 3661.0], [813.0, 4778.0], [811.0, 2911.0], [809.0, 1830.0], [807.0, 4153.0], [805.0, 5616.0], [801.0, 5536.0], [885.0, 786.0], [895.0, 42.0], [921.0, 88.0], [925.0, 2321.0], [945.0, 961.0], [965.0, 954.0], [967.0, 1019.0], [969.0, 234.0], [971.0, 244.0], [1054.0, 430.8333333333333], [1038.0, 878.0], [1158.0, 523.0], [1222.0, 451.0], [1394.0, 2634.0], [1450.0, 545.0], [1470.0, 3972.6666666666665], [1458.0, 4150.279069767442], [1466.0, 3471.133333333333], [1486.0, 4095.2], [1518.0, 2180.0], [1530.0, 5187.0], [1526.0, 4052.0], [1510.0, 4443.2], [1490.0, 3699.75], [1494.0, 3367.0], [1482.0, 5421.5], [1478.0, 3821.4772727272716], [1474.0, 3611.48], [1594.0, 2577.0], [1598.0, 4660.333333333333], [1590.0, 3994.6666666666665], [1546.0, 3251.0], [1542.0, 1791.5], [1538.0, 4879.0], [1582.0, 3926.5], [1578.0, 3340.0], [1570.0, 4640.0], [1566.0, 5576.0], [1562.0, 4209.0], [1554.0, 5742.0], [1662.0, 1202.5], [1658.0, 3622.5], [1646.0, 4776.0], [1642.0, 5247.333333333333], [1638.0, 3302.0], [1634.0, 2533.0], [1626.0, 2133.0], [1618.0, 2574.75], [1614.0, 2611.0], [1610.0, 5073.0], [1606.0, 2610.0], [1602.0, 6159.5], [1726.0, 3228.0], [1722.0, 4108.0], [1718.0, 3216.0], [1690.0, 1308.0], [1710.0, 2705.0], [1706.0, 2328.0], [1682.0, 2513.0], [1678.0, 2785.5], [1730.0, 6115.0], [1758.0, 1706.0], [1734.0, 4237.333333333333], [1742.0, 5033.0], [1746.0, 6978.0], [1786.0, 4898.5], [1782.0, 6704.0], [1766.0, 6405.0], [1822.0, 5633.0], [1854.0, 2896.333333333333], [1850.0, 5081.0], [1794.0, 1543.0], [1834.0, 3197.5], [1814.0, 3928.0], [1866.0, 2368.0], [1898.0, 786.0], [1858.0, 1829.0], [1902.0, 4128.25], [1890.0, 4116.0], [1886.0, 1475.0], [1878.0, 4947.75], [1874.0, 3530.0], [1882.0, 2608.0], [1978.0, 5405.0], [1974.0, 2438.0], [1982.0, 4121.0], [1970.0, 2412.0], [1934.0, 1362.0], [1926.0, 2750.6666666666665], [1942.0, 5881.0], [1958.0, 2148.0], [1994.0, 3976.1666666666665], [2022.0, 2511.5], [2030.0, 3345.0], [2018.0, 2796.0], [1986.0, 5091.0], [1998.0, 5989.5], [2010.0, 4253.5], [2006.0, 2401.0], [2002.0, 6637.0], [2252.0, 2180.0], [2404.0, 1776.142857142857], [2316.0, 3.3333333333333335], [2364.0, 2.0], [2348.0, 2.5], [2412.0, 3307.857142857143], [2420.0, 3662.4], [2388.0, 3.0], [2380.0, 3831.25], [2396.0, 3637.25], [2428.0, 617.0], [2460.0, 4565.0], [2532.0, 2984.5], [2444.0, 6118.0], [2436.0, 791.5], [2540.0, 2.3333333333333335], [2548.0, 2819.0], [2508.0, 2.0], [2524.0, 2453.0], [2468.0, 310.5], [2476.0, 2635.5], [2484.0, 2323.0], [2588.0, 81.61538461538461], [2668.0, 3347.5], [2596.0, 3239.0], [2604.0, 1980.0], [2620.0, 2749.0], [2580.0, 4641.0], [2572.0, 169.0], [2684.0, 3575.0], [2652.0, 3636.2], [2636.0, 840.0], [2660.0, 5216.0], [2796.0, 1729.0], [2812.0, 2946.0], [2788.0, 3526.0], [2748.0, 1102.0], [2692.0, 4077.0], [2708.0, 3487.666666666667], [2740.0, 2848.3333333333335], [2724.0, 6546.0], [2780.0, 2723.0], [2756.0, 4562.0], [2836.0, 994.0], [2932.0, 2777.5], [2860.0, 3809.0], [2852.0, 4500.666666666667], [2868.0, 4907.0], [2876.0, 2952.5], [2924.0, 1667.0], [2908.0, 3868.0], [2900.0, 2902.0], [2892.0, 1705.5], [2884.0, 4031.0], [3012.0, 1922.0], [3020.0, 4782.0], [3068.0, 4554.0], [2996.0, 721.0], [2988.0, 3622.3333333333335], [3036.0, 4744.0], [3028.0, 4453.0], [3196.0, 3402.0], [3188.0, 3229.0], [3172.0, 4699.833333333333], [3220.0, 4098.0], [3228.0, 6330.0], [3212.0, 2720.0], [3204.0, 2282.5], [3260.0, 1532.0], [3252.0, 2637.0], [3236.0, 5046.5], [3324.0, 2431.0], [3308.0, 4022.7142857142862], [3292.0, 3960.0], [3276.0, 2398.0], [3444.0, 3128.6], [3396.0, 3192.0], [3388.0, 2723.5], [3332.0, 6019.0], [3340.0, 2014.0], [3420.0, 2779.3333333333335], [3460.0, 2454.5], [3500.0, 3163.0], [3492.0, 2895.7500000000005], [3516.0, 3501.0], [3540.0, 5090.0], [3548.0, 2538.0], [3580.0, 1391.0], [3572.0, 1210.0], [3556.0, 5926.0], [3468.0, 6238.0], [3692.0, 686.0], [3588.0, 146.0], [3596.0, 2459.0], [3604.0, 2211.0], [3612.0, 2469.0], [3628.0, 2500.8], [3748.0, 1785.0], [3924.0, 1894.0], [4060.0, 3514.5], [4232.0, 2930.0], [4248.0, 897.5], [4280.0, 1951.3333333333333], [4328.0, 3930.0], [4312.0, 4433.5], [4296.0, 1809.4], [4584.0, 1563.7333333333333], [4600.0, 1922.8], [4504.0, 1265.0], [4488.0, 551.0], [4520.0, 2533.0], [4536.0, 2264.0], [4552.0, 2.0], [4408.0, 3533.5], [4392.0, 1772.8571428571427], [4376.0, 3381.666666666667], [4360.0, 3498.75], [4472.0, 1887.7777777777778], [4440.0, 297.9761904761904], [4568.0, 171.62500000000003], [4664.0, 1812.75], [4648.0, 5.75], [4632.0, 478.33333333333337], [4249.0, 122.0], [4345.0, 3546.285714285714], [4265.0, 317.5], [4281.0, 1521.5], [4313.0, 2917.666666666667], [4329.0, 2734.0], [4297.0, 2053.0], [4361.0, 2253.75], [4473.0, 634.0098039215686], [4457.0, 3259.0], [4441.0, 1386.857142857143], [4425.0, 2727.75], [4553.0, 2.0], [4409.0, 1112.7272727272727], [4393.0, 3167.25], [4377.0, 3473.1111111111113], [4489.0, 1971.4444444444443], [4537.0, 361.0], [4521.0, 2680.7142857142853], [4601.0, 2930.285714285714], [4585.0, 538.8], [4569.0, 226.8571428571429], [4649.0, 442.28571428571433], [4633.0, 1704.0], [2141.0, 2630.0], [2421.0, 3487.8], [2357.0, 2.0], [2325.0, 3.0], [2333.0, 2.0], [2373.0, 4940.0], [2389.0, 6421.0], [2381.0, 1343.0], [2429.0, 6477.0], [2413.0, 4289.279999999999], [2405.0, 2772.0], [2397.0, 2714.0], [2541.0, 1.6666666666666667], [2533.0, 1.6666666666666667], [2461.0, 6502.0], [2453.0, 6061.0], [2445.0, 6764.0], [2485.0, 4400.0], [2557.0, 3.2142857142857144], [2501.0, 2081.333333333333], [2549.0, 2140.0], [2509.0, 2.0], [2525.0, 4050.0], [2477.0, 391.5], [2621.0, 2905.5], [2565.0, 5769.0], [2613.0, 4136.2], [2685.0, 2060.0], [2629.0, 3657.5], [2677.0, 3419.6666666666665], [2645.0, 4472.0], [2789.0, 4357.0], [2781.0, 4489.0], [2773.0, 2334.0], [2765.0, 4309.5], [2741.0, 3667.5], [2701.0, 6134.5], [2717.0, 1935.0], [2725.0, 4890.333333333333], [2917.0, 4231.0], [2933.0, 4359.0], [2941.0, 1409.0], [2925.0, 2269.0], [2821.0, 2216.0], [2869.0, 6254.0], [2861.0, 1701.0], [2853.0, 1877.0], [2885.0, 2652.0], [3045.0, 4882.5], [3061.0, 1581.0], [3069.0, 674.0], [3053.0, 4501.5], [2965.0, 4420.5], [2949.0, 6613.0], [3005.0, 3064.6], [2997.0, 1625.0], [2989.0, 3403.5], [3029.0, 1629.0], [3021.0, 4918.0], [3013.0, 1818.5], [3093.0, 1083.0], [3189.0, 2335.375], [3181.0, 4108.5], [3197.0, 2331.0], [3077.0, 3793.25], [3317.0, 4635.0], [3325.0, 3604.5], [3309.0, 1190.0], [3213.0, 2066.0], [3205.0, 2973.3333333333335], [3261.0, 1378.0], [3277.0, 5396.0], [3269.0, 2933.5], [3429.0, 3215.5], [3413.0, 4405.0], [3445.0, 3508.5], [3405.0, 3713.333333333333], [3357.0, 1578.5], [3349.0, 2715.3333333333335], [3373.0, 2720.5], [3365.0, 1206.6666666666667], [3421.0, 4652.0], [3461.0, 4483.0], [3517.0, 2292.0], [3485.0, 3289.777777777778], [3509.0, 3012.3333333333335], [3493.0, 2477.5], [3581.0, 4963.0], [3525.0, 4168.0], [3533.0, 3827.5], [3541.0, 6173.0], [3573.0, 3503.6666666666665], [3565.0, 4364.0], [3613.0, 3013.461538461538], [3589.0, 3148.0], [3629.0, 3677.4], [3621.0, 3094.1666666666665], [3637.0, 3210.333333333333], [3821.0, 1249.0], [3909.0, 1819.5], [3869.0, 1876.0], [4061.0, 3887.0], [4234.0, 1887.25], [4346.0, 3440.428571428571], [4250.0, 2873.6666666666665], [4266.0, 3544.4], [4282.0, 3918.2], [4314.0, 2800.75], [4298.0, 871.6666666666666], [4410.0, 2622.7500000000005], [4586.0, 1094.0], [4602.0, 876.0], [4506.0, 2926.0], [4490.0, 1453.0], [4522.0, 1375.5], [4394.0, 427.0], [4378.0, 3531.0], [4474.0, 309.06849315068484], [4442.0, 1002.5], [4426.0, 1043.0], [4458.0, 2299.64], [4362.0, 2946.8], [4634.0, 3505.0], [4650.0, 952.5], [4666.0, 1621.3333333333333], [4682.0, 2909.0], [4618.0, 18.599999999999994], [4331.0, 2097.5], [4235.0, 3233.0], [4251.0, 2929.0], [4315.0, 2422.625], [4267.0, 2343.8888888888887], [4283.0, 1976.0], [4347.0, 3639.6], [4299.0, 648.0], [4219.0, 3099.5], [4203.0, 3437.75], [4187.0, 3598.0], [4379.0, 457.0], [4363.0, 2140.8333333333335], [4475.0, 265.5853658536586], [4459.0, 2327.2], [4443.0, 831.6666666666666], [4427.0, 2827.2], [4411.0, 2940.3333333333335], [4395.0, 2753.111111111111], [4555.0, 869.4285714285713], [4603.0, 3246.0], [4491.0, 322.25], [4507.0, 2998.75], [4523.0, 2004.0], [4539.0, 327.0], [4587.0, 513.3125], [4571.0, 1835.75], [4635.0, 29.4], [4619.0, 625.5], [4667.0, 2232.0], [4651.0, 574.4166666666666], [1051.0, 420.875], [1323.0, 637.0], [1339.0, 3595.0], [1379.0, 513.0], [1363.0, 2530.0], [1471.0, 4151.4], [1467.0, 3549.722222222222], [1463.0, 4750.666666666667], [1459.0, 3412.375], [1455.0, 3750.6470588235293], [1523.0, 5605.0], [1531.0, 1716.0], [1535.0, 3623.0], [1527.0, 7107.0], [1519.0, 3968.5], [1511.0, 2657.3333333333335], [1499.0, 3302.0], [1475.0, 2290.75], [1479.0, 5073.666666666667], [1483.0, 4511.25], [1487.0, 3189.3500000000004], [1495.0, 4347.8], [1491.0, 3255.714285714286], [1551.0, 3096.5], [1599.0, 7318.0], [1575.0, 2688.25], [1587.0, 3262.0], [1583.0, 3974.25], [1579.0, 5554.0], [1563.0, 884.0], [1559.0, 4895.0], [1543.0, 7125.0], [1539.0, 3283.25], [1659.0, 2935.0], [1651.0, 3664.4], [1639.0, 4692.0], [1635.0, 7302.0], [1627.0, 1243.0], [1623.0, 402.5], [1619.0, 1734.5], [1615.0, 4231.5], [1607.0, 3264.0], [1727.0, 3447.5], [1699.0, 4829.5], [1723.0, 3250.0], [1719.0, 7109.0], [1715.0, 2745.5], [1679.0, 5348.5], [1671.0, 4155.333333333333], [1667.0, 4065.0], [1695.0, 5438.0], [1687.0, 5156.0], [1711.0, 2247.0], [1707.0, 4237.333333333333], [1703.0, 2756.5], [1787.0, 2671.0], [1763.0, 2555.0], [1779.0, 3472.5], [1743.0, 2318.0], [1735.0, 7067.0], [1755.0, 1773.0], [1751.0, 3790.3333333333335], [1775.0, 5555.0], [1771.0, 3202.0], [1767.0, 4323.0], [1803.0, 3346.3333333333335], [1807.0, 1269.0], [1799.0, 5345.8], [1823.0, 3165.0], [1819.0, 1226.0], [1815.0, 2643.5], [1851.0, 5461.0], [1827.0, 4043.0], [1847.0, 1171.0], [1835.0, 3160.0], [1831.0, 1568.5], [1911.0, 3709.5], [1907.0, 5621.0], [1899.0, 1884.2500000000002], [1895.0, 4610.0], [1883.0, 2172.0], [1863.0, 5409.0], [1867.0, 1335.0], [1871.0, 5004.5], [1875.0, 4708.0], [1971.0, 2415.0], [1979.0, 3817.25], [1923.0, 4960.5], [1927.0, 4938.0], [1931.0, 5042.0], [1935.0, 4968.0], [1947.0, 1676.0], [1967.0, 3670.0], [1963.0, 3838.0], [1955.0, 2963.5], [2047.0, 939.0], [1987.0, 5345.0], [2027.0, 4942.333333333333], [2023.0, 2418.0], [2011.0, 5520.0], [2007.0, 6869.0], [2166.0, 871.0], [2054.0, 6170.0], [2278.0, 1540.5], [2302.0, 3.0], [2294.0, 541.0], [2222.0, 6830.0], [2326.0, 3.0], [2358.0, 3.0], [2342.0, 5147.0], [2366.0, 1962.0], [2374.0, 1.0], [2382.0, 6834.0], [2430.0, 4092.0], [2406.0, 3949.25], [2414.0, 3476.8124999999995], [2390.0, 3297.6], [2398.0, 1399.0], [2454.0, 1288.75], [2494.0, 1933.6666666666665], [2438.0, 4615.5], [2446.0, 4773.0], [2462.0, 2.4], [2534.0, 3593.0], [2542.0, 4419.75], [2550.0, 655.5], [2558.0, 1.5], [2502.0, 5304.0], [2510.0, 3198.0], [2518.0, 714.0], [2526.0, 15.0], [2470.0, 718.5], [2590.0, 735.1111111111111], [2678.0, 2050.0], [2582.0, 3514.0], [2566.0, 2495.3333333333335], [2622.0, 5006.0], [2614.0, 1255.0], [2606.0, 1131.0], [2670.0, 106.0], [2654.0, 3940.0], [2646.0, 2143.0], [2718.0, 1551.3333333333333], [2766.0, 3835.0], [2806.0, 6419.0], [2798.0, 2949.5], [2750.0, 1196.0], [2710.0, 5283.5], [2742.0, 1108.0], [2726.0, 1591.0], [2774.0, 4404.0], [2758.0, 1521.0], [2934.0, 4153.0], [2862.0, 1922.0], [2942.0, 3720.0], [2926.0, 3613.6666666666665], [2846.0, 4429.6], [2822.0, 3922.0], [2902.0, 1324.5], [3054.0, 3656.8], [3062.0, 2401.5], [3070.0, 2809.666666666667], [3014.0, 1006.0], [2950.0, 3730.6666666666665], [2958.0, 4242.666666666667], [2974.0, 4257.75], [2982.0, 2229.6666666666665], [3038.0, 2177.5], [3030.0, 4985.5], [3022.0, 5110.0], [3174.0, 3228.272727272727], [3190.0, 671.0], [3134.0, 2433.5], [3078.0, 6421.0], [3166.0, 2245.0], [3198.0, 3654.666666666667], [3182.0, 2950.0], [3310.0, 2345.0], [3278.0, 3034.0], [3286.0, 1646.6666666666667], [3318.0, 1873.0], [3230.0, 3772.0], [3214.0, 2916.0], [3206.0, 3480.75], [3254.0, 702.0], [3270.0, 1837.0], [3454.0, 2865.0], [3446.0, 2070.2], [3406.0, 939.0], [3390.0, 1855.0], [3382.0, 3047.5], [3374.0, 2108.0], [3422.0, 2201.0], [3462.0, 1335.5], [3518.0, 4210.0], [3502.0, 4116.0], [3494.0, 6206.0], [3582.0, 3197.8333333333335], [3542.0, 4457.0], [3550.0, 1567.5], [3574.0, 571.5], [3558.0, 3483.5], [3470.0, 844.6666666666666], [3598.0, 4234.0], [3710.0, 922.0], [3638.0, 2369.2], [3590.0, 4160.0], [3606.0, 224.0], [3614.0, 4518.999999999999], [3630.0, 3473.0], [3622.0, 301.5], [3830.0, 104.0], [4316.0, 4203.0], [4236.0, 1451.5], [4332.0, 2577.0], [4348.0, 1217.3333333333335], [4252.0, 1446.6666666666667], [4284.0, 2479.8], [4300.0, 3312.4444444444443], [4204.0, 3308.0], [4220.0, 4122.666666666667], [4140.0, 4374.0], [4604.0, 2080.0], [4572.0, 2049.857142857143], [4492.0, 1393.8000000000002], [4524.0, 2527.0], [4508.0, 2794.6470588235293], [4540.0, 3861.0], [4588.0, 63.0], [4412.0, 1164.0], [4396.0, 937.0], [4380.0, 2811.142857142857], [4364.0, 2871.3333333333335], [4476.0, 217.0], [4460.0, 2832.333333333333], [4444.0, 911.8333333333333], [4428.0, 2591.3333333333335], [4652.0, 640.4230769230769], [4636.0, 30.818181818181817], [4620.0, 2126.5], [4317.0, 2364.0], [4333.0, 2014.8666666666668], [4269.0, 1603.8749999999998], [4285.0, 3364.4], [4301.0, 1911.0], [4221.0, 2881.5], [4141.0, 4308.0], [4205.0, 2644.75], [4413.0, 135.0], [4493.0, 1748.6666666666667], [4477.0, 216.57480314960625], [4461.0, 2615.375], [4445.0, 541.5833333333334], [4429.0, 2193.6666666666665], [4397.0, 1927.3333333333335], [4365.0, 391.4], [4381.0, 2275.5], [4557.0, 1633.6666666666665], [4605.0, 1806.25], [4509.0, 2336.5], [4525.0, 1682.8749999999995], [4589.0, 3.4], [4573.0, 1029.0], [4637.0, 1453.3571428571427], [4653.0, 1712.3636363636363], [4621.0, 2602.4], [4669.0, 3418.0], [2095.0, 1374.0], [2119.0, 2899.5], [2055.0, 4492.0], [2071.0, 5324.0], [2239.0, 6677.0], [2207.0, 3109.0], [2327.0, 2.5], [2319.0, 3.0], [2311.0, 2.0], [2343.0, 2.0], [2367.0, 650.0], [2391.0, 3178.4347826086955], [2431.0, 6341.0], [2375.0, 6462.0], [2407.0, 3448.6666666666665], [2415.0, 4349.833333333333], [2399.0, 3510.6666666666665], [2543.0, 4696.0], [2495.0, 4073.0], [2535.0, 5196.0], [2487.0, 2.0], [2551.0, 1542.0], [2559.0, 3925.5], [2503.0, 6340.0], [2511.0, 4730.0], [2527.0, 2.6666666666666665], [2479.0, 464.0], [2591.0, 739.2], [2679.0, 4720.0], [2583.0, 2512.0], [2567.0, 4677.0], [2615.0, 2032.5], [2607.0, 3996.5], [2599.0, 3859.0], [2687.0, 3568.6666666666665], [2631.0, 2966.5], [2663.0, 2957.5], [2639.0, 1545.0], [2799.0, 5190.0], [2807.0, 3555.25], [2815.0, 4310.5], [2759.0, 948.0], [2719.0, 6640.0], [2703.0, 4134.5], [2695.0, 3260.0], [2751.0, 4984.0], [2727.0, 6752.0], [2783.0, 2044.0], [2927.0, 1743.0], [2919.0, 3143.5], [2943.0, 930.0], [2895.0, 4212.333333333333], [2903.0, 3413.0], [2935.0, 1894.0], [2847.0, 4616.0], [2839.0, 3358.25], [2831.0, 6325.5], [2823.0, 2347.0], [2879.0, 5065.666666666667], [2871.0, 2671.0], [2863.0, 2678.0], [2911.0, 3156.6666666666665], [3047.0, 3377.0], [3023.0, 4300.0], [3015.0, 4137.5], [3055.0, 3955.0], [2975.0, 6006.0], [2959.0, 736.0], [2951.0, 3117.5], [2999.0, 1154.5], [2991.0, 3944.0], [3039.0, 4692.0], [3183.0, 4230.0], [3199.0, 5500.0], [3175.0, 2321.0], [3167.0, 2900.5], [3191.0, 2639.75], [3143.0, 2531.0], [3215.0, 4623.5], [3311.0, 422.0], [3303.0, 3983.0], [3223.0, 2264.0], [3207.0, 1084.0], [3263.0, 866.0], [3255.0, 2400.5], [3239.0, 3956.666666666667], [3287.0, 3285.5], [3455.0, 2463.4], [3407.0, 2228.0], [3383.0, 1160.0], [3375.0, 1754.0], [3367.0, 1188.0], [3415.0, 3350.25], [3351.0, 3216.5], [3471.0, 5702.0], [3567.0, 2916.0], [3463.0, 4597.0], [3487.0, 604.0], [3519.0, 4356.0], [3559.0, 2361.8], [3503.0, 1174.0], [3495.0, 1030.0], [3527.0, 2264.75], [3535.0, 2796.0], [3607.0, 1909.75], [3591.0, 4298.333333333333], [3615.0, 2736.9999999999995], [3711.0, 867.0], [3631.0, 4170.333333333333], [3623.0, 4186.0], [3639.0, 1977.0], [3991.0, 49.0], [4350.0, 2058.285714285714], [4254.0, 2885.0], [4334.0, 1264.3333333333333], [4238.0, 1728.0], [4270.0, 2895.5], [4286.0, 2269.6666666666665], [4302.0, 4693.333333333333], [4222.0, 3022.8333333333335], [4206.0, 3633.4], [4574.0, 1903.4285714285713], [4558.0, 1200.5], [4606.0, 18.5], [4494.0, 1577.0], [4510.0, 2941.3], [4526.0, 2729.875], [4590.0, 237.0], [4366.0, 64.36363636363636], [4414.0, 1507.2857142857142], [4398.0, 936.0], [4382.0, 607.2857142857143], [4446.0, 1943.3157894736842], [4430.0, 8.0], [4462.0, 756.8695652173913], [4478.0, 265.7291666666667], [4654.0, 2195.8888888888887], [4670.0, 2018.0], [4638.0, 1908.6], [4622.0, 1683.0], [4335.0, 3484.0], [4351.0, 1155.0], [4239.0, 2109.0], [4255.0, 4069.0], [4271.0, 3283.25], [4287.0, 1569.5], [4319.0, 1919.75], [4303.0, 2744.916666666667], [4223.0, 370.0], [4143.0, 2925.0], [4207.0, 3738.5], [4367.0, 1936.6666666666665], [4463.0, 3209.142857142857], [4447.0, 29.5], [4431.0, 117.0], [4479.0, 130.54545454545456], [4383.0, 410.41666666666663], [4415.0, 2100.1], [4399.0, 1545.8333333333335], [4607.0, 268.3333333333333], [4495.0, 4080.0], [4511.0, 2330.0454545454545], [4543.0, 2559.0], [4591.0, 848.4545454545455], [4575.0, 632.7142857142858], [4671.0, 1595.625], [4623.0, 1014.3636363636363], [4655.0, 1734.4], [4639.0, 1014.4615384615385], [1.0, 8162.0]], "isOverall": false, "label": "HTTP Request characters", "isController": false}, {"data": [[3029.566308707462, 2632.719239228883]], "isOverall": false, "label": "HTTP Request characters-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4682.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 378.0, "minX": 1.75927278E12, "maxY": 2957600.066666667, "series": [{"data": [[1.75927278E12, 2957600.066666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.75927278E12, 378.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927278E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2632.719239228883, "minX": 1.75927278E12, "maxY": 2632.719239228883, "series": [{"data": [[1.75927278E12, 2632.719239228883]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927278E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 23.156294475352524, "minX": 1.75927278E12, "maxY": 23.156294475352524, "series": [{"data": [[1.75927278E12, 23.156294475352524]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927278E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 10.257213093543788, "minX": 1.75927278E12, "maxY": 10.257213093543788, "series": [{"data": [[1.75927278E12, 10.257213093543788]], "isOverall": false, "label": "HTTP Request characters", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927278E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 42.0, "minX": 1.75927278E12, "maxY": 164.0, "series": [{"data": [[1.75927278E12, 164.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.75927278E12, 42.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.75927278E12, 163.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.75927278E12, 164.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.75927278E12, 111.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.75927278E12, 164.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927278E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 8162.0, "series": [{"data": [[2374.0, 106.0], [829.0, 163.0], [58.0, 103.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 8162.0], [1092.0, 99.0], [294.0, 2.0], [2374.0, 3835.5], [1439.0, 3148.0], [1628.0, 1556.5], [829.0, 3878.5], [14.0, 1091.0], [58.0, 738.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2374.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 8154.0, "series": [{"data": [[2374.0, 88.5], [829.0, 94.0], [58.0, 96.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 8154.0], [1092.0, 0.0], [294.0, 0.0], [2374.0, 0.0], [1439.0, 0.0], [1628.0, 0.0], [829.0, 0.0], [14.0, 1066.0], [58.0, 717.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2374.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 128.81666666666666, "minX": 1.75927278E12, "maxY": 128.81666666666666, "series": [{"data": [[1.75927278E12, 128.81666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927278E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.75927278E12, "maxY": 101.28333333333333, "series": [{"data": [[1.75927278E12, 3.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.75927278E12, 24.483333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.75927278E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.io.InterruptedIOException", "isController": false}, {"data": [[1.75927278E12, 101.28333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75927278E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.75927278E12, "maxY": 128.63333333333333, "series": [{"data": [[1.75927278E12, 128.63333333333333]], "isOverall": false, "label": "HTTP Request characters-failure", "isController": false}, {"data": [[1.75927278E12, 0.18333333333333332]], "isOverall": false, "label": "HTTP Request characters-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927278E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.75927278E12, "maxY": 128.63333333333333, "series": [{"data": [[1.75927278E12, 0.18333333333333332]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.75927278E12, 128.63333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75927278E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

